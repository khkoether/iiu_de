Installation in Ubuntu: Ruby 2.0.0, Ruby on Rails 4
===================================================
Karl-Heinz Köther <&#107;&#104;&#107;&#111;&#101;&#116;&#104;&#101;&#114;&#064;&#107;&#097;&#104;&#119;&#101;&#098;&#046;&#100;&#101;>

:icons:
:Author Initials: KHK
:creativecommons-url: http://creativecommons.org/licenses/by-sa/3.0/de/
:ubuntu-url: http://www.ubuntu.com/
:asciidoc-url: http://www.methods.co.nz/asciidoc/
:git-url: http://git-scm.com/
:git-download-url: http://code.google.com/p/git-core/downloads/list
:ruby-url: http://www.ruby-lang.org/
:ruby-download-url: http://www.ruby-lang.org/de/downloads/
:ruby-ftp: ftp://www.ruby-lang.org/pub/ruby/2.0/
:rubyonrails-url: http://www.rubyonrails.org

:ruby-version: 2.0.0-p353
:ruby20_1st-url: link:ruby20_1st.html

Version 2.0.2, Dezember 2013


Abstract
--------
Dieser Artikel ist eine Schritt-für-Schritt Anleitung zur Installation 
von {ruby-url}[Ruby 2.0.0] aus dem QuellCode.
 
Die Programmiersprache {ruby-url}[Ruby] ist die Grundlage für das 
Framework {rubyonrails-url}[Ruby on Rails].

Der Artikel ist in {asciidoc-url}[AsciiDoc] erstellt worden.

[CAUTION]
====
Zu beachten ist, dass so ein Dokument zum Einen nie abschliessend 
sein kann, und zum Anderen bestimmte Konfigurationen anders, oder 
auf einem anderem Weg durchgeführt werden können. +
Gerne nehme ich Verbesserungsvorschläge entgegen.

Es gilt wie immer: Verwendung der Anleitung auf eigene Gefahr.
====


Vorraussetzung
--------------
Die Installation wird für {ubuntu-url}[Ubuntu 12.04 LTS (Precise Pangolin)] 
beschrieben. +
Gleichwohl sind die einzelnen Schritte auch für 
andere Distributionen übertragbar.

[TIP]
====
Ubuntu has Stable Release Updates Policy which basically disallow importing 
new versions into stable releases. So it's not possible to have official 
Ruby 2.0 packages in the Ubuntu 12.04, because it could introduce new bugs, 
regressions, etc. So you will have to rely on some future-to-be PPA.

Just to clarify whole process, how does a package enter Ubuntu. 
Because Ruby 2.0 is not even packaged yet.

The usual release process of Ubuntu is to wait for packages to appear in 
Debian first and import them from there.
====


Download
--------
* {ruby-ftp}[Ruby 2.0.0] +    
  ruby-{ruby-version}.tar.gz  (ca. 13M) +
  2013-11-22 (Release date)  

[NOTE] 
====
Stand der Dinge ist *2013* mindestens Ruby 1.9.3 verwenden!!!
 
Ruby 2.0.0 ist am 24. Februar 2013 (20 Jahre Ruby) hinzugekommen.
====

[NOTE] 
====
Das Kompilieren der Programmiersprache Ruby wird vom Benutzer 'sid' 
durchgeführt. +
Die eigentliche Installation von Ruby und Ruby on Rails wird vom 
Benutzer 'root' für das System durchgeführt.
----
$ ls -l 
-rw-rw-r-- 1 sid sid 13572794 Dez  9 18:08 ruby-2.0.0-p353.tar.gz
----
====

[NOTE] 
====
Vor der eigentlichen Installation müssen die fehlenden 
Programm-Pakete installiert sind.
----
$ sudo apt-get install ...
               Benötigt:   build-essential libc6-dev  g++  make  dpkg-dev  
               Benötigt:   libssl-dev libmysqlclient-dev libsqlite3-dev    
               Benötigt:   libreadline6-dev libyaml-dev zlib1g-dev
               Benötigt:   libltdl-dev libtool
----
====


Installation: Ruby {ruby-version}
---------------------------------
Zusätzliche Software-Pakete  
sollten im Verzeichnis '/opt' (Optional) installiert werden. 

[IMPORTANT]
====
Ohne die Angabe eines Verzeichnisses wird '/usr/local/...' automatisch verwendet.
Eine bereits vorhandene Ruby-Installation wird überschrieben. +  
 +
Beispiel für die Änderung des Installations-Verzeichnisses:
'./configure --prefix=/opt/wo_auch_immer'
====

*Step 1:* Auspacken des Source-Code
----
$ tar xvzf ruby-2.0.0-p353.tar.gz
$ cd ruby-2.0.0-p353
----

*Step 2:* Ziel-Verzeichnis anlegen, Konfiguration erstellen und kompilieren
----
$ sudo mkdir -p /opt/Ruby/ruby-2.0.0-p353
----

----
$ ./configure --prefix=/opt/Ruby/ruby-2.0.0-p353 | tee ../log.ruby_configure
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking target system type... x86_64-unknown-linux-gnu
checking for gcc... gcc
checking whether the C compiler works... yes
[...]
checking for nroff... /usr/bin/nroff
.ext/include/x86_64-linux/ruby/config.h updated
verconf.h updated
ruby library version = 2.0.0
configure: creating ./config.status
config.status: creating Makefile
config.status: creating ruby-2.0.pc
----

----
$ make all | tee ../log.ruby_make-all
        CC = gcc
        LD = ld
        LDSHARED = gcc -shared
        CFLAGS = -O3 -ggdb -Wextra -Wno-unused-parameter 
                           -Wno-parentheses -Wno-long-long 
                           -Wno-missing-field-initializers -Werror=pointer-arith 
                           -Werror=write-strings -Werror=declaration-after-statement 
                           -Werror=implicit-function-declaration 
        XCFLAGS = -include ruby/config.h -include ruby/missing.h -fvisibility=hidden -DRUBY_EXPORT
        CPPFLAGS =   -I. -I.ext/include/x86_64-linux -I./include -I.
        DLDFLAGS =  
        SOLIBS = 
compiling main.c
[...]
Generating RDoc documentation  

Generating RI format into /yggdrasil/PrecisePangolin/Ruby20/ruby-2.0.0-p353/.ext/rdoc...

Files:        905

Classes:     1411 (   0 undocumented)
Modules:      312 (   4 undocumented)
Constants:   2282 ( 724 undocumented)
Attributes:  1137 ( 340 undocumented)
Methods:    10864 (2556 undocumented)

Total:      16006 (3624 undocumented)
 77.36% documented

Elapsed: 158.7s
----

----
$ make test | tee ../log.ruby_make-test
[...]
sample/test.rb:assignment ...................[...viele...]...OK 372   <1>
sample/test.rb:condition ..OK 2
sample/test.rb:if/unless ...OK 3
sample/test.rb:case .....OK 5
[...]
sample/test.rb:gc ....OK 4

test succeeded
PASS all 964 tests
./miniruby -I./lib -I. -I.ext/common  ./tool/runruby.rb --extout=.ext  -- 
  --disable-gems "./bootstraptest/runner.rb" --ruby="ruby"   ./KNOWNBUGS.rb
2013-12-09 18:30:14 +0100
Driver is ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-linux]
Target is ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-linux]

KNOWNBUGS.rbPASS 0   <2>
No tests, no problem
----
<1> Jeder ausgegebene _._ (Punkt) ist ein ausgeführter Test.
<2> Wortwörtlich: Das sind _known_bugs_ ;-) -- aktuell, keiner.

[NOTE]
====
Auf die folgenden Teile des Ruby-Interpreters verzichte ich in meiner
Installation. Sollten Sie sie benötigen, +
müssen die entsprechenden
Entwickler-Bibliotheken (libNAME-dev) zusätzlich installiert werden. 
 
Führen Sie anschließend die obigen Befehle (make ...) erneut aus.
----
$ grep Failed ../log.ruby_make-all
Failed to configure -test-/win32/dln. It will not be installed.
Failed to configure -test-/win32/fd_setsize. It will not be installed.
Failed to configure dl/win32. It will not be installed.
Failed to configure fiddle/win32. It will not be installed.
Failed to configure tk. It will not be installed.
Failed to configure tk/tkutil. It will not be installed.
Failed to configure win32ole. It will not be installed.
----
====

*Step 3:* Installation (als Benutzer 'root') + 
(Dokumentation wird mitinstalliert: install-doc entfällt)
----
$ sudo make install | tee ../log.ruby_make-install
[...]
Generating RDoc documentation

No newer files.

Files:      0

Classes:    0 (0 undocumented)
Modules:    0 (0 undocumented)
Constants:  0 (0 undocumented)
Attributes: 0 (0 undocumented)
Methods:    0 (0 undocumented)

Total:      0 (0 undocumented)
  0.00% documented

Elapsed: 0.0s
config.status: creating x86_64-linux-fake.rb
./miniruby -I./lib -I. -I.ext/common  ./tool/runruby.rb --extout=.ext  -- 
           --disable-gems -r./x86_64-linux-fake ./tool/rbinstall.rb 
           --make="make" --dest-dir="" --extout=".ext" --mflags="" 
           --make-flags="" --data-mode=0644 --prog-mode=0755 
           --installed-list .installed.list --mantype="doc" 
           --install=all --rdoc-output=".ext/rdoc"
installing binary commands:   /opt/Ruby/ruby-2.0.0-p353/bin
installing base libraries:    /opt/Ruby/ruby-2.0.0-p353/lib
installing arch files:        /opt/Ruby/ruby-2.0.0-p353/lib/ruby/2.0.0/x86_64-linux
installing pkgconfig data:    /opt/Ruby/ruby-2.0.0-p353/lib/pkgconfig
installing extension objects: /opt/Ruby/ruby-2.0.0-p353/lib/ruby/2.0.0/x86_64-linux
installing extension objects: /opt/Ruby/ruby-2.0.0-p353/lib/ruby/site_ruby/2.0.0/x86_64-linux
installing extension objects: /opt/Ruby/ruby-2.0.0-p353/lib/ruby/vendor_ruby/2.0.0/x86_64-linux
installing extension headers: /opt/Ruby/ruby-2.0.0-p353/include/ruby-2.0.0/x86_64-linux
installing extension scripts: /opt/Ruby/ruby-2.0.0-p353/lib/ruby/2.0.0
installing extension scripts: /opt/Ruby/ruby-2.0.0-p353/lib/ruby/site_ruby/2.0.0
installing extension scripts: /opt/Ruby/ruby-2.0.0-p353/lib/ruby/vendor_ruby/2.0.0
installing extension headers: /opt/Ruby/ruby-2.0.0-p353/include/ruby-2.0.0/ruby
installing rdoc:              /opt/Ruby/ruby-2.0.0-p353/share/ri/2.0.0/system
installing capi-docs:         /opt/Ruby/ruby-2.0.0-p353/share/doc/ruby
installing command scripts:   /opt/Ruby/ruby-2.0.0-p353/bin
installing library scripts:   /opt/Ruby/ruby-2.0.0-p353/lib/ruby/2.0.0
installing common headers:    /opt/Ruby/ruby-2.0.0-p353/include/ruby-2.0.0
installing manpages:          /opt/Ruby/ruby-2.0.0-p353/share/man/man1
installing default gems:      /opt/Ruby/ruby-2.0.0-p353/lib/ruby/gems/2.0.0 (build_info, cache, doc, gems, specifications)
                              bigdecimal 1.2.0
                              io-console 0.4.2
                              json 1.7.7
                              minitest 4.3.2
                              psych 2.0.0
                              rake 0.9.6
                              rdoc 4.0.0
                              test-unit 2.0.0.0
----

*Step 4:* Installation verifizieren
----
$ cd /opt/Ruby/ruby-2.0.0-p353
$ ls -l
drwxr-xr-x 2 root root 4096 Dez  9 18:32 bin
drwxr-xr-x 3 root root 4096 Dez  9 18:32 include
drwxr-xr-x 4 root root 4096 Dez  9 18:32 lib
drwxr-xr-x 5 root root 4096 Dez  9 18:32 share
----

----
$ ls -l bin
-rwxr-xr-x 1 root root     4414 Dez  9 18:32 erb
-rwxr-xr-x 1 root root      563 Dez  9 18:32 gem
-rwxr-xr-x 1 root root      335 Dez  9 18:32 irb
-rwxr-xr-x 1 root root     1337 Dez  9 18:32 rake
-rwxr-xr-x 1 root root      955 Dez  9 18:32 rdoc
-rwxr-xr-x 1 root root      205 Dez  9 18:32 ri
-rwxr-xr-x 1 root root 17653973 Dez  9 18:25 ruby
-rwxr-xr-x 1 root root       95 Dez  9 18:32 testrb
----

*Step 5:* Der Pfad zum Verzeichnis '/opt/Ruby/ruby-{ruby-version}/bin' muß gesetzt werden. 
----
$ cd /opt/Ruby/
$ sudo ln -s ruby-2.0.0-p353 current20

$ ls -l
lrwxrwxrwx 1 root root   15 Okt  8 16:29 current -> ruby-1.9.3-p448
lrwxrwxrwx 1 root root   15 Okt  8 18:48 current20 -> ruby-2.0.0-p353
drwxr-xr-x 6 root root 4096 Jan  4  2012 ruby-1.9.3-p0
drwxr-xr-x 7 root root 4096 Okt  4  2012 ruby-1.9.3-p194
drwxr-xr-x 7 root root 4096 Okt 27 17:52 ruby-1.9.3-p286
drwxr-xr-x 7 root root 4096 Nov 21 10:05 ruby-1.9.3-p327-old
drwxr-xr-x 7 root root 4096 Jan 16 11:51 ruby-1.9.3-p362
drwxr-xr-x 7 root root 4096 Jan 22 10:13 ruby-1.9.3-p374
drwxr-xr-x 6 root root 4096 Apr 14 10:51 ruby-1.9.3-p392
drwxr-xr-x 6 root root 4096 Jun  1 15:13 ruby-1.9.3-p429
drwxr-xr-x 7 root root 4096 Okt  8 16:39 ruby-1.9.3-p448
-rw-r--r-- 1 root root   45 Jun 23  2011 ruby19.path.sh
drwxr-xr-x 7 root root 4096 Okt  8 18:59 ruby-2.0.0-p247
drwxr-xr-x 6 root root 4096 Dez  9 18:32 ruby-2.0.0-p353
-rw-r--r-- 1 root root   47 Jul 20 13:11 ruby20.path.sh
----

.Lokal in der aktuellen Shell (1)
Erstellen Sie eine Datei 'ruby20.path.sh'.  
----
$ sudo vim ruby20.path.sh
PATH=/opt/Ruby/current20/bin:$PATH
export PATH
----

[NOTE] 
=========================================================
Achtung: Ausführen der Datei mit dem Punkt-Operator!
----
$ . ruby20.path.sh   <1>
---- 
<1> Oder mit dem Bash-Builtin Kommando: _source ruby20.path.sh_
=========================================================

.Systemweit in der Datei '/etc/environment' (2)
----
$ sudo vim /etc/environment
PATH="/opt/Ruby/current20/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
----


*Step 6:* Check

.Die Ruby-Version ...
----
$ which ruby
/opt/Ruby/current20/bin/ruby   <1>

$ sudo which ruby            <2>
/opt/Ruby/current20/bin/ruby

$ ruby -v                    <3>
ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-linux]
----
<1> Das Kommando 'which' wertet den gesetzten 'PATH' für den Benutzer 'sid' aus +
<2> Das Kommando 'which' wertet den gesetzten 'PATH' für den Benuzter 'root' aus
<3> Ausgabe der Version des installierten Ruby


.Vollständigkeit ...
----
$ ruby -ropenssl -rzlib -rreadline -e "puts 'Happy new Ruby'"
Happy new Ruby
----

.Und ein Ruby 2.0-Feature ...
----
$ irb
irb(main):001:0> RUBY_VERSION
=> "2.0.0"
irb(main):002:0> RUBY_PATCHLEVEL
=> 353
irb(main):003:0> Time.now.to_s
=> "2013-12-09 18:39:12 +0100"
irb(main):004:0> Time.now.sunday?
=> false
irb(main):005:0> Time.now.monday?
=> true
irb(main):006:0> exit
----

.ri - Ruby Interactive (Test der installierten Dokumentation)
----
$ ri Array#each
----

----
= Array#each

(from ruby core)
 -----------------------------------------------------------------------------
  ary.each {|item| block }   -> ary
  ary.each                   -> an_enumerator
   

 -----------------------------------------------------------------------------

Calls block once for each element in self, passing that element as a
parameter.

If no block is given, an enumerator is returned instead.

  a = [ "a", "b", "c" ]
  a.each {|x| print x, " -- " }

produces:

  a -- b -- c --
----


Rubygems Aktualisierung
-----------------------
_RubyGems_ (oder kurz Gems) ist das offizielle Paketsystem für die 
Programmiersprache Ruby. Mit ihm hat der Anwender die Möglichkeit, 
mehrere (zum Beispiel ältere oder jüngere) Versionen eines Programmes, 
Programmteiles oder einer Bibliothek gesteuert nach Bedarf einzurichten, 
zu verwalten oder auch wieder zu entfernen. +
&rarr; link:http://de.wikipedia.org/wiki/RubyGems[Wikipedia: RubyGems]

[NOTE]
====
Die Aktualisierung der Ruby2.0-Installation wird mit dem 
Benutzer 'root' durchgeführt.
====

*Step 1:* Vorraussetzung für die nächsten Befehle ist ein 
funktionierender 'PATH'-Eintrag für alle Benutzer (einschliesslich 'root') 
auf die Ruby2.0-Installation:
----
$ which gem
/opt/Ruby/current20/bin/gem

$ sudo su -
# . /opt/Ruby/ruby20.path.sh
# which gem
/opt/Ruby/current20/bin/gem
----

Dann gehen auch die folgenden Befehle
----
$ gem -v
2.0.14

$ gem list --local

*** LOCAL GEMS ***

bigdecimal (1.2.0)
io-console (0.4.2)
json (1.7.7)
minitest (4.3.2)
psych (2.0.0)
rake (0.9.6)
rdoc (4.0.0)
test-unit (2.0.0.0)
----

*Step 2:* Das Programm 'gem' aktualisieren ...
----
# gem update --system      
Updating rubygems-update
Fetching: rubygems-update-2.1.11.gem (100%)
Successfully installed rubygems-update-2.1.11
Parsing documentation for rubygems-update-2.1.11
Installing ri documentation for rubygems-update-2.1.11
Installing darkfish documentation for rubygems-update-2.1.11
Installing RubyGems 2.1.11
RubyGems 2.1.11 installed
Parsing documentation for rubygems-2.1.11
Installing ri documentation for rubygems-2.1.11

[...]

 -----------------------------------------------------------------------------

RubyGems installed the following executables:
	      /opt/Ruby/ruby-2.0.0-p353/bin/gem

Ruby Interactive (ri) documentation was installed. ri is kind of like man 
pages for ruby libraries. You may access it like this:
  ri Classname
  ri Classname.class_method
  ri Classname#instance_method
If you do not wish to install this documentation in the future, use the
 --no-document flag, or set it as the default in your ~/.gemrc file. See
'gem help env' for details.

RubyGems system software updated
----
 
*Step 3:* Installierte RubyGems aktualisieren
----
# gem update
Updating installed gems
Updating bigdecimal
Fetching: bigdecimal-1.2.3.gem (100%)
Building native extensions.  This could take a while...
Successfully installed bigdecimal-1.2.3
Parsing documentation for bigdecimal-1.2.3
unable to convert "\xC0" from ASCII-8BIT to UTF-8 for bigdecimal.o, skipping
unable to convert "\xD0" from ASCII-8BIT to UTF-8 for bigdecimal.so, skipping
Installing ri documentation for bigdecimal-1.2.3
Installing darkfish documentation for bigdecimal-1.2.3
Updating json
Fetching: json-1.8.1.gem (100%)
Building native extensions.  This could take a while...
Successfully installed json-1.8.1
Parsing documentation for json-1.8.1
unable to convert "\xE0" from ASCII-8BIT to UTF-8 for lib/json/ext/generator.so, skipping
unable to convert "\xF8" from ASCII-8BIT to UTF-8 for lib/json/ext/parser.so, skipping
Installing ri documentation for json-1.8.1
Installing darkfish documentation for json-1.8.1
Updating minitest
Fetching: minitest-5.1.0.gem (100%)
Successfully installed minitest-5.1.0
Parsing documentation for minitest-5.1.0
Installing ri documentation for minitest-5.1.0
Installing darkfish documentation for minitest-5.1.0
Updating psych
Fetching: psych-2.0.2.gem (100%)
Building native extensions.  This could take a while...
Successfully installed psych-2.0.2
Parsing documentation for psych-2.0.2
unable to convert "\xE0" from ASCII-8BIT to UTF-8 for lib/psych.so, skipping
Installing ri documentation for psych-2.0.2
Installing darkfish documentation for psych-2.0.2
Updating rake
Fetching: rake-10.1.0.gem (100%)
rake's executable "rake" conflicts with /opt/Ruby/ruby-2.0.0-p353/bin/rake
Overwrite the executable? [yN]  y   <1>
Successfully installed rake-10.1.0
Parsing documentation for rake-10.1.0
Installing ri documentation for rake-10.1.0
Installing darkfish documentation for rake-10.1.0
Updating rdoc
Fetching: rdoc-4.0.1.gem (100%)
rdoc's executable "rdoc" conflicts with /opt/Ruby/ruby-2.0.0-p353/bin/rdoc
Overwrite the executable? [yN]  y
rdoc's executable "ri" conflicts with /opt/Ruby/ruby-2.0.0-p353/bin/ri
Overwrite the executable? [yN]  y
Depending on your version of ruby, you may need to install ruby rdoc/ri data:

<= 1.8.6 : unsupported
 = 1.8.7 : gem install rdoc-data; rdoc-data --install
 = 1.9.1 : gem install rdoc-data; rdoc-data --install
>= 1.9.2 : nothing to do! Yay!
Successfully installed rdoc-4.0.1
Parsing documentation for rdoc-4.0.1
Installing ri documentation for rdoc-4.0.1
Installing darkfish documentation for rdoc-4.0.1
Updating test-unit
Fetching: test-unit-2.5.5.gem (100%)
Successfully installed test-unit-2.5.5
Parsing documentation for test-unit-2.5.5
Installing ri documentation for test-unit-2.5.5
Installing darkfish documentation for test-unit-2.5.5
Gems updated: bigdecimal json minitest psych rake rdoc test-unit   <2>
----
<1> Ich wähle die jeweils aktuellste Version: _y_
<2> Sieben _Gems_ aktualisiert!

----
# gem list --local

*** LOCAL GEMS ***

bigdecimal (1.2.3, 1.2.0)
io-console (0.4.2)
json (1.8.1, 1.7.7)
minitest (5.1.0, 4.3.2)
psych (2.0.2, 2.0.0)
rake (10.1.0, 0.9.6)   <1>
rdoc (4.0.1, 4.0.0)
rubygems-update (2.1.11)
test-unit (2.5.5, 2.0.0.0)
----
<1> Der gezeigte Versionssprung ist kein Fehler ;-) +
    &rarr; link:https://github.com/jimweirich/rake/blob/next-major-release/doc/release_notes/rake-10.0.0.rdoc[Rake 10.0 Released]

*Step 4:* Dokumentation zu den installierten RubyGems aktualisieren
----
# cd /opt/Ruby/current20   <1>  
# rdoc .
Parsing sources...
Couldn't find file to include 'README.txt' from lib/ruby/2.0.0/minitest/unit.rb 
Before reporting this, could you check that the file you're documentingdex.js   
has proper syntax:

  /opt/Ruby/ruby-2.0.0-p353/bin/ruby -c lib/ruby/gems/2.0.0/doc/rdoc-4.0.1/rdoc/js/search_index.js

RDoc is not a full Ruby parser and will fail when fed invalid ruby programs.

The internal error was:

	(NoMethodError) undefined method `last' for nil:NilClass

uh-oh! RDoc had a problem:   <2>
undefined method `last' for nil:NilClass

run with --debug for full backtrace
----
<1> Entspricht: _/opt/Ruby/ruby-2.0.0-p353_
<2> Das Problem habe ich bisher nicht gefixed :-(


Installation: Ruby on Rails 4.0.2
---------------------------------
*Step 0* 
----
# gem search ^rails$ --remote

*** REMOTE GEMS ***

rails (4.0.2)
----

*Step 1:* Wichtig ist hier die Systemweite Installation von 
Rails 4.0.2 mit dem Benutzer 'root'.
---- 
# gem install rails --no-rdoc --no-ri
Fetching: i18n-0.6.9.gem (100%)
Successfully installed i18n-0.6.9
[...]
Fetching: rails-4.0.2.gem (100%)
Successfully installed rails-4.0.2
28 gems installed     <1>
----
<1> Für das Framework _Ruby on Rails_ wurden 28 RubyGems installiert. +
    28 statt 29, da das RubyGem _minitest_ bereits installiert ist! +
    Hinweis: Weitere RubyGems müssen installiert werden (Datenbank-Treiber, Erweiterungen). 

[NOTE]
====
Alternativ kann Rails mit der Angabe einer Version installiert werden.
----
# gem install rails --version 4.0.2

# gem install rails --version '~> 4.0.2'   <1>
----
<1> Twiddle Wakka: '~> 4.0.2' bedeutet, das die höchste Gem-Version von Rails
    im Bereich von >= 4.0.2 und < 4.1 installiert wird. 
====

----
$ gem list --local 

*** LOCAL GEMS ***

actionmailer (4.0.2)
actionpack (4.0.2)
activemodel (4.0.2)
activerecord (4.0.2)
activerecord-deprecated_finders (1.0.3)
activesupport (4.0.2)
arel (4.0.1)
atomic (1.1.14)
bigdecimal (1.2.3, 1.2.0)
builder (3.1.4)
bundler (1.3.5)
erubis (2.7.0)
hike (1.2.3)
i18n (0.6.9)
io-console (0.4.2)
json (1.8.1, 1.7.7)
mail (2.5.4)
mime-types (1.25.1)
minitest (5.1.0, 4.3.2)
multi_json (1.8.2)
polyglot (0.3.3)
psych (2.0.2, 2.0.0)
rack (1.5.2)
rack-test (0.6.2)
rails (4.0.2)
railties (4.0.2)
rake (10.1.0, 0.9.6)
rdoc (4.0.1, 4.0.0)
rubygems-update (2.1.11)
sprockets (2.10.1)
sprockets-rails (2.0.1)
test-unit (2.5.5, 2.0.0.0)
thor (0.18.1)
thread_safe (0.1.3)
tilt (1.4.1)
treetop (1.4.15)
tzinfo (0.3.38)
----

----
$ cd /opt/Ruby/current20
$ ls -l bin
-rwxr-xr-x 1 root root      478 Dez  9 18:49 bundle
-rwxr-xr-x 1 root root     4414 Dez  9 18:32 erb
-rwxr-xr-x 1 root root      475 Dez  9 18:49 erubis
-rwxr-xr-x 1 root root      563 Dez  9 18:32 gem
-rwxr-xr-x 1 root root      335 Dez  9 18:32 irb
-rwxr-xr-x 1 root root      469 Dez  9 18:49 rackup
-rwxr-xr-x 1 root root      480 Dez  9 18:49 rails
-rwxr-xr-x 1 root root      467 Dez  9 18:43 rake
-rwxr-xr-x 1 root root      467 Dez  9 18:43 rdoc
-rwxr-xr-x 1 root root      465 Dez  9 18:43 ri
-rwxr-xr-x 1 root root 17653973 Dez  9 18:25 ruby
-rwxr-xr-x 1 root root      487 Dez  9 18:49 sprockets
-rwxr-xr-x 1 root root       95 Dez  9 18:32 testrb
-rwxr-xr-x 1 root root      467 Dez  9 18:49 thor
-rwxr-xr-x 1 root root      467 Dez  9 18:49 tilt
-rwxr-xr-x 1 root root      474 Dez  9 18:49 tt
-rwxr-xr-x 1 root root      511 Dez  9 18:41 update_rubygems
----

*Step 2:* Installation der Datenbank-Treiber mit dem Benutzer 'root'.
---- 
# gem install mysql2 --no-rdoc --no-ri
Fetching: mysql2-0.3.14.gem (100%)
Building native extensions.  This could take a while...
Successfully installed mysql2-0.3.14
1 gem installed
----

[CAUTION]
====
_mysql2_ in der Version 0.3.x arbeitet nicht mit _Rails 3.0.x_ zusammen. +
Dementsprechend mu&szlig; f&uuml;r _Rails 3.0.x_ eine älterere Version installiert werden!
----
# gem install mysql2 --version 0.2.11   <1>
[...]
----  
====

----
# gem install sqlite3 --no-rdoc --no-ri   <1>
Fetching: sqlite3-1.3.8.gem (100%)
Building native extensions.  This could take a while...
Successfully installed sqlite3-1.3.8
1 gem installed
----
<1> Rails ist für die Verwendung einer 'SQLite3'-Datenbank vorkonfiguriert. + 
    Klein, kompakt und dateibasiert – mit diesen Vorzügen glänzt 'SQLite3'. 
    Daher haben sich die Rails-Core-Entwickler für 'SQLite3' als 
    Default-Datenbank entschieden.
 
[NOTE]
====
Hello! The sqlite3-ruby gem has changed it's name to just sqlite3.  Rather than
installing `sqlite3-ruby`, you should install `sqlite3`.  Please update your
dependencies accordingly.

Thanks from the Ruby sqlite3 team!

<3 <3 <3 <3
====

*Step 3:* Erweiterungen
----
# gem install sinatra --no-rdoc --no-ri   <1>
Fetching: rack-protection-1.5.1.gem (100%)
Successfully installed rack-protection-1.5.1
Fetching: sinatra-1.4.4.gem (100%)
Successfully installed sinatra-1.4.4
2 gems installed
----
<1> Sinatra ist eine _freie_ und _open source Webapplikationsbibliothek_ und 
    eine in Ruby geschriebene _domänenspezifische_ Sprache. +
    Sinatra setzt das Rack Webserver-Interface voraus. +
    &rarr; link:http://de.wikipedia.org/wiki/Sinatra_%28Software%29[Wikipedia: Sinatra (Software)]


RubyGems Documentation Index
----------------------------
Auf die installierte Dokumentation zugreifen.
----
# gem server
Server started at http://0.0.0.0:8808
----

----
Browser> http://localhost:8808/
         RubyGems Documentation Index   
----

image::images/ruby/rubygems20_documentation_index.jpeg[RubyGems 2.0 Documentation Index]


Beispiel
--------
{ruby20_1st-url}[Rails 4: Erste Schritte &hellip; mit Ruby]


Anhang
------
Script zum Installieren von Ruby {ruby-version} (ohne weitere Erläuterung).

.Datei: +ruby20-install.sh+
----
#!/bin/bash
#
ME=make_ruby_2.0.0
NAME=ruby-2.0.0-p353
TARGET=/opt/Ruby/${NAME}

if [ ! -e $TARGET ] 
then
  echo "Ziel-Verzeichnis '$TARGET' existiert nicht."
  echo "Abbruch."
  exit 1
fi
echo "Ziel-Verzeichnis:"
ls -l $TARGET

echo "Ruby 2.0.0-Installation fortsetzen (j/n)"
read dummy
case $dummy in
  j|J|y|Y) echo "Installation wird fortgesetzt."
           ;;
  *) echo "Installation wird abgebrochen."
     exit 1
     ;;
esac

echo 
echo "Source auspacken ..."
tar xvzf ${NAME}.tar.gz
cd ${NAME}

echo 
echo "Source übersetzen ..."
./configure --prefix=$TARGET --enable-shared | tee ../log.ruby_configure
make all  | tee ../log.ruby_make-all 
make test | tee ../log.ruby_make-test

echo
echo "Ruby 2.0.0 installieren"
sudo make install | tee ../log.ruby_make-install

echo
ls -l $TARGET

echo 
echo "$ME: Ende."
----

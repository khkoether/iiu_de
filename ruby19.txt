Installation in Ubuntu: Ruby 1.9.3, Ruby on Rails 3.2.13 
========================================================
Karl-Heinz Köther <&#107;&#104;&#107;&#111;&#101;&#116;&#104;&#101;&#114;&#064;&#107;&#097;&#104;&#119;&#101;&#098;&#046;&#100;&#101;>

:icons:
:Author Initials: KHK
:creativecommons-url: http://creativecommons.org/licenses/by-sa/3.0/de/
:ubuntu-url: http://www.ubuntu.com/
:asciidoc-url: http://www.methods.co.nz/asciidoc/
:ruby-url: http://www.ruby-lang.org/
:ruby-download-url: http://www.ruby-lang.org/de/downloads/
:ruby-ftp: ftp://www.ruby-lang.org/pub/ruby/1.9/
:rubyonrails-url: http://www.rubyonrails.org

:ruby-version: 1.9.3-p392
:ruby19ror-url: link:ruby19ror.html

Version 1.8.0, April 2013, <<_changelog,[Changelog]>>


Abstract
--------
Dieser Artikel ist eine Schritt-für-Schritt Anleitung zur Installation 
von {ruby-url}[Ruby 1.9.3] aus dem QuellCode.
 
Die Programmiersprache {ruby-url}[Ruby] ist die Grundlage für das 
Framework {rubyonrails-url}[Ruby on Rails].

Der Artikel ist in {asciidoc-url}[AsciiDoc] erstellt worden.

[CAUTION]
====
Zu beachten ist, dass so ein Dokument zum Einen nie abschliessend 
sein kann, und zum Anderen bestimmte Konfigurationen anders, oder 
auf einem anderem Weg durchgeführt werden können. +
Gerne nehme ich Verbesserungsvorschläge entgegen.

Es gilt wie immer: Verwendung der Anleitung auf eigene Gefahr.
====


Vorraussetzungen
----------------
Die Installation wird für {ubuntu-url}[Ubuntu 12.04 LTS (Precise Pangolin)] 
beschrieben. +
Gleichwohl sind die einzelnen Schritte auch für 
andere Distributionen übertragbar.

[TIP]
====
Ubuntu 12.04 LTS (Precise Pangolin) enthält das Paket _ruby1.9.3_1.9.3.0-1ubuntu1_all_ 
(entspricht: Ruby 1.9.3p0). Das Paket _ruby1.8_1.8.7.352-2ubuntu1_ 
(entspricht: Ruby 1.8.7p352) ist in der Regel (über bestehende Abhängigkeiten zu
anderen Ubuntu-Paketen) bereits installiert.
====


Download
~~~~~~~~
* {ruby-ftp}[Ruby 1.9.3] +    
  ruby-{ruby-version}.tar.gz  (ca. 12M) +
  2013-02-22 (Release date)  

[NOTE] 
====
Stand der Dinge ist *2013* ausschlie&szlig;lich die Version Ruby 1.9.3!!! 
Für jedes neu aufzusetzende Projekt sollte diese Version verwendet werden.
====

[NOTE] 
====
Das Kompilieren der Programmiersprache Ruby wird vom Benutzer 'sid' 
durchgeführt. +
Die eigentliche Installation von Ruby und Ruby on Rails wird vom 
Benutzer 'root' für das System durchgeführt.
----
$ ls -l 
-rw-rw-r-- 1 sid sid 12557294 Apr 14 10:36 ruby-1.9.3-p392.tar.gz
----
====

[NOTE] 
====
Vor der eigentlichen Installation müssen die fehlenden 
Programm-Pakete installiert sind.
----
$ sudo apt-get install ...
               Benötigt:   build-essential libc6-dev  g++  make  dpkg-dev  
               Benötigt:   libssl-dev libmysqlclient-dev libsqlite3-dev    
               Benötigt:   libreadline6-dev libyaml-dev zlib1g-dev
               Benötigt:   libltdl-dev libtool
----
====


Installation
------------

Ruby {ruby-version}
~~~~~~~~~~~~~~~~~~~
Zusätzliche Software-Pakete  
sollten im Verzeichnis '/opt' (Optional) installiert werden. 

[IMPORTANT]
====
Ohne die Angabe eines Verzeichnisses wird '/usr/local/...' automatisch verwendet.
Eine bereits vorhandene Ruby-Installation wird überschrieben. +  
 +
Beispiel für die Änderung des Installations-Verzeichnisses:
'./configure --prefix=/opt/wo_auch_immer'
====

*Step 1:* Auspacken des Source-Code
----
$ tar xvzf ruby-1.9.3-p392.tar.gz
$ cd ruby-1.9.3-p392
----

*Step 2:* Ziel-Verzeichnis anlegen, Konfiguration erstellen und kompilieren
----
$ sudo mkdir -p /opt/Ruby/ruby-1.9.3-p392
----

[NOTE]
====
Die Programm-Option 'configure --program-suffix=19' hilft nicht wirklich. Sie ändert 
die Namen der zu installierenden Binaries bsp. für 'ruby' auf 'ruby19'. Damit könnten die 
Dateien auch in das Verzeichnis '/usr/local/bin' installiert werden - scheinbar eine gute
Lösung - bis zu dem Moment wenn Rails installiert wird und die Programme 'rails' und 'rake'
ohne das Suffix '19' wiederum vorhandene Dateien überschreibt.
====

----
$ ./configure --prefix=/opt/Ruby/ruby-1.9.3-p392 | tee ../log.ruby_configure
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking target system type... x86_64-unknown-linux-gnu
checking for gcc... gcc
checking whether the C compiler works... yes
[...]
checking for nroff... /usr/bin/nroff
.ext/include/x86_64-linux/ruby/config.h updated
ruby library version = 1.9.1
configure: creating ./config.status
config.status: creating Makefile
config.status: creating ruby-1.9.pc
----

----
$ make all | tee ../log.ruby_make_all
        CC = gcc
        LD = ld
        LDSHARED = gcc -shared
        CFLAGS = -O3 -ggdb -Wextra -Wno-unused-parameter 
                           -Wno-parentheses -Wno-long-long 
                           -Wno-missing-field-initializers -Werror=pointer-arith 
                           -Werror=write-strings -Werror=declaration-after-statement 
                           -Werror=implicit-function-declaration 
        XCFLAGS = -include ruby/config.h -include ruby/missing.h -fvisibility=hidden -DRUBY_EXPORT
        CPPFLAGS =   -I. -I.ext/include/x86_64-linux -I./include -I.
        DLDFLAGS =  
        SOLIBS = 
compiling main.c
[...]
Generating RDoc documentation   <1> 
lib/irb/inspector.rb:36:36: Couldn't find INSPECTORS. Assuming it's a module
lib/mkmf.rb:1117:29: Couldn't find STRING_OR_FAILED_FORMAT. Assuming it's a module
Enclosing class/module 'mDigest' for class MD5 not known
Enclosing class/module 'mDigest' for class RMD160 not known
Enclosing class/module 'mDigest' for class SHA1 not known
Enclosing class/module "cASN1ObjectId" for alias short_name sn not known
Enclosing class/module "cASN1ObjectId" for alias long_name ln not known

Generating RI format into /yggdrasil/PrecisePangolin/Ruby19/ruby-1.9.3-p392/.ext/rdoc...

Files:        773

Classes:     1374 ( 708 undocumented)
Modules:      306 ( 152 undocumented)
Constants:   2258 ( 828 undocumented)
Attributes:  1020 ( 440 undocumented)
Methods:    10478 (3102 undocumented)

Total:      15436 (5230 undocumented)
 66.12% documented

Elapsed: 116.7s
----
<1> Beim Erzeugen der _Ruby Documentation (RDoc)_ kommt es zu Fehlern!

----
$ make test | tee ../log.ruby_make_test
sample/test.rb:assignment ...................[...viele...]   <1>
sample/test.rb:condition ..
sample/test.rb:if/unless ...
sample/test.rb:case .....
[...]
test_thread.rb ..................................................
PASS all 951 tests
./miniruby -I./lib -I. -I.ext/common  ./tool/runruby.rb --extout=.ext  -- 
                       --disable-gems "./bootstraptest/runner.rb" 
                       --ruby="ruby"  ./KNOWNBUGS.rb
2013-04-14 10:48:24 +0200
Driver is ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-linux]
Target is ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-linux]


KNOWNBUGS.rb           <2>
No tests, no problem
----
<1> Jeder ausgegebene _._ (Punkt) ist ein ausgeführter Test.
<2> Wortwörtlich: Das ist ein _known_bug_ ;-) -- aktuell, keiner.

[NOTE]
====
Auf die folgenden Teile des Ruby-Interpreters verzichte ich in meiner
Installation. Sollten Sie sie benötigen, +
müssen die entsprechenden
Entwickler-Bibliotheken (libNAME-dev) zusätzlich installiert werden. 
 
Führen Sie anschließend die obigen Befehle (make ...) erneut aus.
----
$ grep Failed ../log.ruby_make_all
Failed to configure -test-/win32/dln. It will not be installed.
Failed to configure -test-/win32/fd_setsize. It will not be installed.
Failed to configure dbm. It will not be installed.
Failed to configure dl/win32. It will not be installed.
Failed to configure fiddle. It will not be installed.
Failed to configure gdbm. It will not be installed.
Failed to configure tk. It will not be installed.
Failed to configure tk/tkutil. It will not be installed.
Failed to configure win32ole. It will not be installed.
----
====

*Step 3:* Installation (als Benutzer 'root') + 
(Dokumentation wird mitinstalliert: install-doc entfällt)
----
$ sudo make install | tee ../log.ruby_make_install
[...]
Generating RDoc documentation

No newer files.

Files:      0

Classes:    0 (0 undocumented)
Modules:    0 (0 undocumented)
Constants:  0 (0 undocumented)
Attributes: 0 (0 undocumented)
Methods:    0 (0 undocumented)

Total:      0 (0 undocumented)
  0.00% documented

Elapsed: 0.0s
./miniruby -I./lib -I. -I.ext/common  ./tool/rbinstall.rb 
                       --make="make" --dest-dir="" --extout=".ext" --mflags="" 
                       --make-flags="" --data-mode=0644 --prog-mode=0755 
                       --installed-list .installed.list --mantype="doc" --install=all 
                       --rdoc-output=".ext/rdoc"
installing binary commands:   /opt/Ruby/ruby-1.9.3-p392/bin
installing base libraries:    /opt/Ruby/ruby-1.9.3-p392/lib
installing arch files:        /opt/Ruby/ruby-1.9.3-p392/lib/ruby/1.9.1/x86_64-linux
installing pkgconfig data:    /opt/Ruby/ruby-1.9.3-p392/lib/pkgconfig
installing extension objects: /opt/Ruby/ruby-1.9.3-p392/lib/ruby/1.9.1/x86_64-linux
installing extension objects: /opt/Ruby/ruby-1.9.3-p392/lib/ruby/site_ruby/1.9.1/x86_64-linux
installing extension objects: /opt/Ruby/ruby-1.9.3-p392/lib/ruby/vendor_ruby/1.9.1/x86_64-linux
installing extension headers: /opt/Ruby/ruby-1.9.3-p392/include/ruby-1.9.1/x86_64-linux
installing extension scripts: /opt/Ruby/ruby-1.9.3-p392/lib/ruby/1.9.1
installing extension scripts: /opt/Ruby/ruby-1.9.3-p392/lib/ruby/site_ruby/1.9.1
installing extension scripts: /opt/Ruby/ruby-1.9.3-p392/lib/ruby/vendor_ruby/1.9.1
installing extension headers: /opt/Ruby/ruby-1.9.3-p392/include/ruby-1.9.1/ruby
installing rdoc:              /opt/Ruby/ruby-1.9.3-p392/share/ri/1.9.1/system
installing capi-docs:         /opt/Ruby/ruby-1.9.3-p392/share/doc/ruby
installing command scripts:   /opt/Ruby/ruby-1.9.3-p392/bin
installing library scripts:   /opt/Ruby/ruby-1.9.3-p392/lib/ruby/1.9.1
installing common headers:    /opt/Ruby/ruby-1.9.3-p392/include/ruby-1.9.1
installing manpages:          /opt/Ruby/ruby-1.9.3-p392/share/man/man1
installing default gems:      /opt/Ruby/ruby-1.9.3-p392/lib/ruby/gems/1.9.1 (cache, doc, gems, specifications)
                              rake 0.9.2.2
                              rdoc 3.9.5
                              minitest 2.5.1
                              json 1.5.5
                              io-console 0.3
                              bigdecimal 1.1.0
----

*Step 4:* Installation verifizieren
----
$ cd /opt/Ruby/ruby-1.9.3-p392
$ ls -l
drwxr-xr-x 2 root root 4096 Apr 14 10:51 bin
drwxr-xr-x 3 root root 4096 Apr 14 10:51 include
drwxr-xr-x 4 root root 4096 Apr 14 10:51 lib
drwxr-xr-x 5 root root 4096 Apr 14 10:51 share
----

----
$ ls -l bin
-rwxr-xr-x 1 root root    4414 Apr 14 10:51 erb
-rwxr-xr-x 1 root root     563 Apr 14 10:51 gem
-rwxr-xr-x 1 root root     335 Apr 14 10:51 irb
-rwxr-xr-x 1 root root    1248 Apr 14 10:51 rake
-rwxr-xr-x 1 root root     805 Apr 14 10:51 rdoc
-rwxr-xr-x 1 root root     205 Apr 14 10:51 ri
-rwxr-xr-x 1 root root 8641132 Apr 14 10:44 ruby
-rwxr-xr-x 1 root root     315 Apr 14 10:51 testrb
----

*Step 5:* Der Pfad zum Verzeichnis '/opt/Ruby/ruby-{ruby-version}/bin' muß gesetzt werden. 
----
$ cd /opt/Ruby/
$ sudo ln -s ruby-1.9.3-p392 current

$ ls -l
lrwxrwxrwx 1 root root   15 Apr 14 10:54 current -> ruby-1.9.3-p392
drwxr-xr-x 6 root root 4096 Jan  4  2012 ruby-1.9.3-p0
drwxr-xr-x 7 root root 4096 Okt  4  2012 ruby-1.9.3-p194
drwxr-xr-x 7 root root 4096 Okt 27 17:52 ruby-1.9.3-p286
drwxr-xr-x 7 root root 4096 Nov 21 10:05 ruby-1.9.3-p327-old
drwxr-xr-x 7 root root 4096 Jan 16 11:51 ruby-1.9.3-p362
drwxr-xr-x 7 root root 4096 Jan 22 10:13 ruby-1.9.3-p374
drwxr-xr-x 6 root root 4096 Apr 14 10:51 ruby-1.9.3-p392
----

.Lokal in der aktuellen Shell (1)
Erstellen Sie eine Datei 'ruby19.path.sh'.  
----
$ sudo vim ruby19.path.sh
PATH=/opt/Ruby/current/bin:$PATH
export PATH
----

[NOTE] 
=========================================================
Achtung: Ausführen der Datei mit dem Punkt-Operator!
----
$ . ruby19.path.sh   <1>
---- 
<1> Oder mit dem Bash-Builtin Kommando: _source ruby19.path.sh_
=========================================================

.Systemweit in der Datei '/etc/environment' (2)
----
$ sudo vim /etc/environment
PATH="/opt/Ruby/current/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
----


*Step 6:* Check

.Die Ruby-Version ...
----
$ which ruby
/opt/Ruby/current/bin/ruby   <1>

$ sudo which ruby            <2>
/opt/Ruby/current/bin/ruby

$ ruby -v                    <3>
ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-linux]
----
<1> Das Kommando 'which' wertet den gesetzten 'PATH' für den Benutzer 'sid' aus +
<2> Das Kommando 'which' wertet den gesetzten 'PATH' für den Benuzter 'root' aus
<3> Ausgabe der Version des installierten Ruby


.Vollständigkeit ...
----
$ ruby -ropenssl -rzlib -rreadline -e "puts 'Happy new Ruby'"
Happy new Ruby
----

.Und ein Ruby1.9-Feature ...
----
irb(main):001:0> RUBY_VERSION
=> "1.9.3"
irb(main):002:0> RUBY_PATCHLEVEL
=> 392
irb(main):003:0> Time.now.to_s
=> "2013-04-14 10:55:12 +0200"
irb(main):004:0> Time.now.friday?
=> false
irb(main):005:0> Time.now.sunday?
=> true
----

.ri - Ruby Interactive (Test der installierten Dokumentation)
----
$ ri Array#each
----

----
= Array#each

(from ruby core)
 -----------------------------------------------------------------------------
  ary.each {|item| block }   -> ary
  ary.each                   -> an_enumerator
   

 -----------------------------------------------------------------------------

Calls block once for each element in self, passing that element as a
parameter.

If no block is given, an enumerator is returned instead.

  a = [ "a", "b", "c" ]
  a.each {|x| print x, " -- " }

produces:

  a -- b -- c --
----


Rubygems
~~~~~~~~
_RubyGems_ (oder kurz Gems) ist das offizielle Paketsystem für die 
Programmiersprache Ruby. Mit ihm hat der Anwender die Möglichkeit, 
mehrere (zum Beispiel ältere oder jüngere) Versionen eines Programmes, 
Programmteiles oder einer Bibliothek gesteuert nach Bedarf einzurichten, 
zu verwalten oder auch wieder zu entfernen. +
&rarr; link:http://de.wikipedia.org/wiki/RubyGems[Wikipedia: RubyGems]

[NOTE]
====
Ruby 1.9 enthält bereits RubyGems - eine früher notwendige 
separate Installation entfällt.
====

[NOTE]
====
Die Aktualisierung der Ruby1.9-Installation wird mit dem 
Benutzer 'root' durchgeführt.
====

*Step 1:* Vorraussetzung für die nächsten Befehle ist ein 
funktionierender 'PATH'-Eintrag für alle Benutzer (einschliesslich 'root') 
auf die Ruby1.9-Installation:
----
$ which gem
/opt/Ruby/current/bin/gem

$ sudo su -
# . /opt/Ruby/ruby19.path.sh
# which gem
/opt/Ruby/current/bin/gem
----

Dann gehen auch die folgenden Befehle
----
$ gem -v
1.8.23

$ gem list --local

*** LOCAL GEMS ***

bigdecimal (1.1.0)
io-console (0.3)
json (1.5.5)
minitest (2.5.1)
rake (0.9.2.2)
rdoc (3.9.5)
----

*Step 2:* Das Programm 'gem' aktualisieren ...
----
# gem update --system      
Updating rubygems-update
Fetching: rubygems-update-2.0.3.gem (100%)
Successfully installed rubygems-update-2.0.3
Installing RubyGems 2.0.3
RubyGems 2.0.3 installed
Installing ri documentation for rubygems-2.0.3
[...]

 -----------------------------------------------------------------------------

RubyGems installed the following executables:
	/opt/Ruby/ruby-1.9.3-p392/bin/gem

Ruby Interactive (ri) documentation was installed. ri is kind of like man 
pages for ruby libraries. You may access it like this:
  ri Classname
  ri Classname.class_method
  ri Classname#instance_method
If you do not wish to install this documentation in the future, use the
--no-document flag, or set it as the default in your ~/.gemrc file. See
'gem help env' for details.

RubyGems system software updated
----
 
*Step 3:* Installierte RubyGems aktualisieren
----
# gem update
Updating installed gems
Updating io-console
Fetching: io-console-0.4.2.gem (100%)
Building native extensions.  This could take a while...
Successfully installed io-console-0.4.2
Installing ri documentation for io-console-0.4.2
Installing darkfish documentation for io-console-0.4.2
Updating json
Fetching: json-1.7.7.gem (100%)
Building native extensions.  This could take a while...
Successfully installed json-1.7.7
Installing ri documentation for json-1.7.7
Installing darkfish documentation for json-1.7.7
Updating minitest
Fetching: minitest-4.7.0.gem (100%)
Successfully installed minitest-4.7.0
Installing ri documentation for minitest-4.7.0
Installing darkfish documentation for minitest-4.7.0
Updating rake
Fetching: rake-10.0.4.gem (100%)
rake's executable "rake" conflicts with /opt/Ruby/ruby-1.9.3-p392/bin/rake
Overwrite the executable? [yN]  y    <1>
Successfully installed rake-10.0.4
Installing ri documentation for rake-10.0.4
Installing darkfish documentation for rake-10.0.4
Updating rdoc
Fetching: rdoc-4.0.1.gem (100%)
rdoc's executable "rdoc" conflicts with /opt/Ruby/ruby-1.9.3-p392/bin/rdoc
Overwrite the executable? [yN]  y
rdoc's executable "ri" conflicts with /opt/Ruby/ruby-1.9.3-p392/bin/ri
Overwrite the executable? [yN]  y
Depending on your version of ruby, you may need to install ruby rdoc/ri data:

<= 1.8.6 : unsupported
 = 1.8.7 : gem install rdoc-data; rdoc-data --install
 = 1.9.1 : gem install rdoc-data; rdoc-data --install
>= 1.9.2 : nothing to do! Yay!
Successfully installed rdoc-4.0.1
Installing ri documentation for rdoc-4.0.1
Installing darkfish documentation for rdoc-4.0.1
Gems updated: io-console json minitest rake rdoc  <2>
----
<1> Ich wähle die jeweils aktuellste Version: _y_
<2> Fünf _Gems_ aktualisiert!

----
# gem list --local

*** LOCAL GEMS ***

bigdecimal (1.1.0)
io-console (0.4.2, 0.3)
json (1.7.7, 1.5.5)
minitest (4.7.1, 2.5.1)
rake (10.0.4, 0.9.2.2)   <1>
rdoc (4.0.1, 3.9.5)
rubygems-update (2.0.3)
----
<1> Der gezeigte Versionssprung ist kein Fehler ;-) +
    &rarr; link:https://github.com/jimweirich/rake/blob/next-major-release/doc/release_notes/rake-10.0.0.rdoc[Rake 10.0 Released]

*Step 4:* Dokumentation zu den installierten RubyGems aktualisieren
----
# cd /opt/Ruby/current   <1>  
# rdoc .
Parsing sources...
Couldn't find file to include 'README.txt' from lib/ruby/1.9.1/minitest/unit.rb 
unknown encoding name "<%= @options.charset %>" for lib/ruby/1.9.1/rdoc/generator/template/darkfish/classpage.rhtml, skipping
Couldn't find file to include 'README.txt' from lib/ruby/gems/1.9.1/gems/minitest-4.7.1/lib/minitest/unit.rb
100% [20401/20401]  share/ri/1.9.1/system/fatal/cdesc-fatal.ri      
                
Generating Darkfish format into /opt/Ruby/ruby-1.9.3-p392/doc...

Files:      20401

Classes:     1317 (   0 undocumented)
Modules:      312 (  15 undocumented)
Constants:   1033 ( 723 undocumented)
Attributes:  1147 ( 474 undocumented)
Methods:     8190 (3387 undocumented)

Total:      11999 (4599 undocumented)
 61.67% documented

Elapsed: 1462.9s  <2>
----
<1> Entspricht: _/opt/Ruby/ruby-1.9.3-p392_
<2> _Generating Darkfish_ dauert lange...

----
# ls -l
drwxr-xr-x  2 root root  4096 Apr 14 10:59 bin
drwxr-xr-x 81 root root 12288 Apr 14 11:26 doc       <1>
drwxr-xr-x  3 root root  4096 Apr 14 10:51 include
drwxr-xr-x  4 root root  4096 Apr 14 10:51 lib
drwxr-xr-x  5 root root  4096 Apr 14 10:51 share
----
<1> Das Dokumentations-Verzeichnis enthält die Datei _index.html_. +
    Das neue Verzeichnis belegt ca. 738M Speicherplatz.

----
Browser> file:///opt/Ruby/current/doc/index.html
----


Ruby on Rails 3.2.13
~~~~~~~~~~~~~~~~~~~~
*Step 0* 
----
# gem search ^rails$ --remote
*** REMOTE GEMS ***
rails (3.2.13)
----

*Step 1:* Wichtig ist hier die Systemweite Installation von 
Rails 3.2.13 mit dem Benutzer 'root'.
---- 
# gem install rails --rdoc --ri
Fetching: i18n-0.6.1.gem (100%)
Successfully installed i18n-0.6.1
[...]
Fetching: rails-3.2.13.gem (100%)
Successfully installed rails-3.2.13
Parsing documentation for i18n-0.6.1
Installing ri documentation for i18n-0.6.1
Installing darkfish documentation for i18n-0.6.1
[...]
Parsing documentation for builder-3.0.4
/opt/Ruby/ruby-1.9.3-p392/lib/ruby/gems/1.9.1/gems/rdoc-4.0.1/lib/rdoc/parser.rb:87: warning: Unsupported encoding : ignored
/opt/Ruby/ruby-1.9.3-p392/lib/ruby/gems/1.9.1/gems/rdoc-4.0.1/lib/rdoc/parser.rb:87: warning: Unsupported encoding  ignored
/opt/Ruby/ruby-1.9.3-p392/lib/ruby/gems/1.9.1/gems/rdoc-4.0.1/lib/rdoc/parser.rb:87: warning: Unsupported encoding : ignored
/opt/Ruby/ruby-1.9.3-p392/lib/ruby/gems/1.9.1/gems/rdoc-4.0.1/lib/rdoc/parser.rb:87: warning: Unsupported encoding  ignored
Installing ri documentation for builder-3.0.4
Installing darkfish documentation for builder-3.0.4
[...]
Parsing documentation for rails-3.2.13
Installing ri documentation for rails-3.2.13
Installing darkfish documentation for rails-3.2.13
Done installing documentation for 
     i18n, multi_json, activesupport, builder, activemodel, rack, rack-cache, rack-test, 
     journey, hike, tilt, sprockets, erubis, actionpack, arel, tzinfo, activerecord, 
     activeresource, mime-types, polyglot, treetop, mail, actionmailer, rack-ssl, thor, 
     railties, bundler, 
     rails after 144 seconds
28 gems installed  <1>
----
<1> Für das Framework _Ruby on Rails_ wurden 28 RubyGems installiert. +
    Hinweis: Weitere RubyGems müssen installiert werden (Datenbank-Treiber, Erweiterungen). 

[NOTE]
====
Alternativ kann Rails mit der Angabe einer Version installiert werden.
----
# gem install rails --version 3.2.13

# gem install rails --version '~> 3.2'   <1>
----
<1> Twiddle Wakka: '~> 3.2' bedeutet, das die höchste Gem-Version von Rails
    im Bereich von >= 3.2 und < 4 installiert wird. 
====

----
$ gem list --local 

*** LOCAL GEMS ***

actionmailer (3.2.13)
actionpack (3.2.13)
activemodel (3.2.13)
activerecord (3.2.13)
activeresource (3.2.13)
activesupport (3.2.13)
arel (3.0.2)
bigdecimal (1.1.0)
builder (3.0.4)
bundler (1.3.5)
erubis (2.7.0)
hike (1.2.2)
i18n (0.6.1)
io-console (0.4.2, 0.3)
journey (1.0.4)
json (1.7.7, 1.5.5)
mail (2.5.3)
mime-types (1.22)
minitest (4.7.1, 2.5.1)
multi_json (1.7.2)
polyglot (0.3.3)
rack (1.4.5)
rack-cache (1.2)
rack-ssl (1.3.3)
rack-test (0.6.2)
rails (3.2.13)
railties (3.2.13)
rake (10.0.4, 0.9.2.2)
rdoc (4.0.1, 3.9.5)
rubygems-update (2.0.3)
sprockets (2.2.2)
thor (0.18.1)
tilt (1.3.7)
treetop (1.4.12)
tzinfo (0.3.37)
----

----
$ cd /opt/Ruby/current
$ ls -l bin
-rwxr-xr-x 1 root root     478 Apr 14 11:33 bundle
-rwxr-xr-x 1 root root    4414 Apr 14 10:51 erb
-rwxr-xr-x 1 root root     475 Apr 14 11:31 erubis
-rwxr-xr-x 1 root root     563 Apr 14 10:51 gem
-rwxr-xr-x 1 root root     335 Apr 14 10:51 irb
-rwxr-xr-x 1 root root     469 Apr 14 11:31 rackup
-rwxr-xr-x 1 root root     480 Apr 14 11:33 rails
-rwxr-xr-x 1 root root     467 Apr 14 10:58 rake
-rwxr-xr-x 1 root root     467 Apr 14 10:59 rdoc
-rwxr-xr-x 1 root root     465 Apr 14 10:59 ri
-rwxr-xr-x 1 root root 8641132 Apr 14 10:44 ruby
-rwxr-xr-x 1 root root     487 Apr 14 11:31 sprockets
-rwxr-xr-x 1 root root     315 Apr 14 10:51 testrb
-rwxr-xr-x 1 root root     467 Apr 14 11:33 thor
-rwxr-xr-x 1 root root     467 Apr 14 11:31 tilt
-rwxr-xr-x 1 root root     474 Apr 14 11:32 tt
-rwxr-xr-x 1 root root     511 Apr 14 10:57 update_rubygems
----

[NOTE]
====
Das Erstellen der Dokumentation muß leider wiederholt werden... und mit Rails (28 Gems)
zusätzlich - ist sie für viele Partitionen halt zu groß ;-)
----
# /partition_mit_viel_platz  <1>
# rdoc /opt/Ruby/current     <2>  
Parsing sources...
[...]
Elapsed: 6789.7s  <3>
----
<1> Ungefähr 11GB - schon beachtlich!
<2> Entspricht: _/opt/Ruby/ruby-1.9.3-p392_ (vorher das _doc_-Verzeichnis löschen!)
<3> _Generating Darkfish_ dauert nun um so vieles länger...
====

*Step 2:* Installation der Datenbank-Treiber mit dem Benutzer 'root'.
---- 
# gem install mysql2 --rdoc --ri
Fetching: mysql2-0.3.11.gem (100%)
Building native extensions.  This could take a while...
Successfully installed mysql2-0.3.11
Parsing documentation for mysql2-0.3.11
Installing ri documentation for mysql2-0.3.11
Installing darkfish documentation for mysql2-0.3.11
Done installing documentation for mysql2 after 0 seconds
1 gem installed
----

[CAUTION]
====
_mysql2_ in der Version 0.3.x arbeitet nicht mit _Rails 3.0.x_ zusammen. +
Dementsprechend mu&szlig; eine älterere Version installiert werden!
----
# gem install mysql2 --version 0.2.11   <1>
[...]
----  
====

----
# gem install sqlite3 --rdoc --ri   <1>
Fetching: sqlite3-1.3.7.gem (100%)
Building native extensions.  This could take a while...
Successfully installed sqlite3-1.3.7
Parsing documentation for sqlite3-1.3.7
Installing ri documentation for sqlite3-1.3.7
Installing darkfish documentation for sqlite3-1.3.7
Done installing documentation for sqlite3 after 1 seconds
1 gem installed
----
<1> Rails ist für die Verwendung einer 'SQLite3'-Datenbank vorkonfiguriert. + 
    Klein, kompakt und dateibasiert – mit diesen Vorzügen glänzt 'SQLite3'. 
    Daher haben sich die Rails-Core-Entwickler für 'SQLite3' als 
    Default-Datenbank entschieden.
 
[NOTE]
====
Hello! The sqlite3-ruby gem has changed it's name to just sqlite3.  Rather than
installing `sqlite3-ruby`, you should install `sqlite3`.  Please update your
dependencies accordingly.

Thanks from the Ruby sqlite3 team!

<3 <3 <3 <3
====

*Step 3:* Erweiterungen
----
# gem install sinatra --rdoc --ri   <1>
Fetching: rack-1.5.2.gem (100%)   <2>
Successfully installed rack-1.5.2
Fetching: rack-protection-1.5.0.gem (100%)
Successfully installed rack-protection-1.5.0
Fetching: sinatra-1.4.2.gem (100%)
Successfully installed sinatra-1.4.2
Parsing documentation for rack-1.5.2
Installing ri documentation for rack-1.5.2
Installing darkfish documentation for rack-1.5.2
Parsing documentation for rack-protection-1.5.0
Installing ri documentation for rack-protection-1.5.0
Installing darkfish documentation for rack-protection-1.5.0
Parsing documentation for sinatra-1.4.2
Installing ri documentation for sinatra-1.4.2
Installing darkfish documentation for sinatra-1.4.2
Done installing documentation for rack, rack-protection, sinatra after 673 seconds
3 gems installed
----
<1> Sinatra ist eine freie und OpenSource Webapplikationsbibliothek und 
    eine in Ruby geschriebene domänenspezifische Sprache. +
    &rarr; link:http://de.wikipedia.org/wiki/Sinatra_%28Software%29[Wikipedia: Sinatra (Software)]
<2> Eine weitere _neuere_ Version von _Rack_ wurde installiert. 
    Das RubyGem _Bundler_ klärt für die nun von Ihnen installierten Frameworks 
    _Ruby on Rails_ und _Sinatra_
    welche der vorhandenen Versionen (1.4.5, 1.5.2) verwendet wird. 


RubyGems Documentation Index
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Auf die installierte Dokumentation zugreifen.
----
# gem server
Server started at http://0.0.0.0:8808
----

----
Browser> http://localhost:8808/
         RubyGems Documentation Index   
----

image::images/ruby/rubygems_documentation_index.jpeg[RubyGems Documentation Index]


Beipiel
~~~~~~~
{ruby19ror-url}[Ruby on Rails: Erste Schritte]


Anhang
------
.Script zum Installieren von Ruby {ruby-version} (ohne weitere Erläuterung)
----
#!/bin/bash
#
ME=make_ruby_1.9.3
NAME=ruby-1.9.3-p392
TARGET=/opt/Ruby/${NAME}

if [ ! -e $TARGET ] 
then
  echo "Ziel-Verzeichnis '$TARGET' existiert nicht."
  echo "Abbruch."
  exit 1
fi
echo "Ziel-Verzeichnis:"
ls -l $TARGET

echo "Ruby 1.9.3-Installation fortsetzen (j/n)"
read dummy
case $dummy in
  j|J|y|Y) echo "Installation wird fortgesetzt."
           ;;
  *) echo "Installation wird abgebrochen."
     exit 1
     ;;
esac

echo 
echo "Source auspacken ..."
tar xvzf ${NAME}.tar.gz
cd ${NAME}

echo 
echo "Source übersetzen ..."
./configure --prefix=$TARGET --enable-shared | tee ../log.ruby_configure
make all  | tee ../log.ruby_make_all 
make test | tee ../log.ruby_make_test

echo
echo "Ruby 1.9.3 installieren"
sudo make install | tee ../log.ruby_make_install

echo
ls -l $TARGET

echo 
echo "$ME: Ende."
----


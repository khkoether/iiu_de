Installation in Ubuntu: Ruby 1.9.2, Ruby on Rails 3.0.3 
=======================================================
Karl-Heinz Köther <&#107;&#104;&#107;&#111;&#101;&#116;&#104;&#101;&#114;&#064;&#107;&#097;&#104;&#119;&#101;&#098;&#046;&#100;&#101;>

:icons:
:Author Initials: KHK
:creativecommons-url: http://creativecommons.org/licenses/by-sa/3.0/de/
:ubuntu-url: http://www.ubuntu.com/
:asciidoc-url: http://www.methods.co.nz/asciidoc/
:ruby-url: http://www.ruby-lang.org/
:ruby-download-url: http://www.ruby-lang.org/de/downloads/
:ruby-ftp: ftp://www.ruby-lang.org/pub/ruby/1.9/
:rubyonrails-url: http://www.rubyonrails.org
:netbeans-url: http://www.netbeans.org/downloads/index.html

Version 1.4.0, November 2010, <<_changelog,[Changelog]>>

Abstract
--------
Dieser Artikel ist eine Schritt-für-Schritt Anleitung zur Installation 
von {ruby-url}[Ruby 1.9.2] aus dem QuellCode.
 
Die Programmiersprache {ruby-url}[Ruby] ist die Grundlage für das 
Framework {rubyonrails-url}[Ruby on Rails].

Der Artikel ist in {asciidoc-url}[ASCII DOC] erstellt worden.

[CAUTION]
====
Zu beachten ist, dass so ein Dokument zum Einen nie abschliessend 
sein kann, und zum Anderen bestimmte Konfigurationen anders, oder 
auf einem anderem Weg durchgeführt werden können. +
Gerne nehme ich Verbesserungsvorschläge entgegen.

Es gilt wie immer: Verwendung der Anleitung auf eigene Gefahr.
====

Vorraussetzungen
----------------
Die Installation wird für {ubuntu-url}[Ubuntu 10.04 (Lucid Lynx)] 
beschrieben. Gleichwohl sind die einzelnen Schritte auch für 
andere Distributionen übertragbar.

.Download
* {ruby-ftp}[Ruby 1.9.2] +    
  ruby-1.9.2-p0.tar.gz  (ca. 10.5 MB) +
  2010-08-18 (Release date)  

[NOTE] 
====
Nach Aussage von Yehuda Katz auf RailsWay Con in Berlin enthalten 
die Versionen Ruby 1.9.1 (Patch xxx) zuviele Fehler im 
Zusammenspiel mit Ruby on Rails. +
Daher sollte man tunlichst darauf verzichten sie zu installieren. 
====

[NOTE] 
====
Das Kompilieren der Programmiersprache Ruby wird vom Benutzer 'bob' 
durchgeführt. +
Die eigentliche Installation von Ruby und Ruby on Rails wird vom 
Benutzer 'root' für das System durchgeführt.
----
$ ls -l 
-rw-r--r--  1 bob  bob  10787899 2010-08-19 19:59 ruby-1.9.2-p0.tar.gz
----
====

[NOTE] 
====
Vor der eigentlichen Installation müssen die fehlenden 
Programm-Pakete installiert sind.
----
$ sudo apt-get install ...
               Benötigt:   build-essential libc6-dev  g++  make  dpkg-dev  
               Benötigt:   libssl-dev libmysqlclient-dev libsqlite3-dev   
               Benötigt:   libreadline5-dev libncurses5-dev zlib1g-dev
----
====


== Installation


=== Ruby 1.9.2
Zusätzliche Software-Pakete die nicht über das Paketmanagement 
verwaltet wird, sollten im Verzeichnis '/opt' (Optional) 
installiert werden. 

[IMPORTANT]
====
Ohne die Angabe eines Verzeichnisses wird '/usr/local/...' automatisch verwendet.
Eine bereits vorhandene Ruby-Installation wird überschrieben. +  
 +
Beispiel für die Änderung des Installations-Verzeichnisses:
'./configure --prefix=/opt/wo_auch_immer'
====

*Step 1:* Auspacken des Source-Code
----
$ tar xvzf ruby-1.9.2-p0.tar.gz
$ cd ruby-1.9.2-p0
----

*Step 2:* Konfiguration erstellen und kompilieren
----
$ sudo mkdir -p /opt/Ruby/ruby-1.9.2-p0
----

[NOTE]
====
Die Programm-Option 'configure --program-suffix=19' hilft nicht wirklich. Sie ändert 
die Namen der zu installierenden Binaries bsp. für 'ruby' auf 'ruby19'. Damit könnten die 
Dateien auch in das Verzeichnis '/usr/local/bin' installiert werden - scheinbar eine gute
Lösung - bis zu dem Moment wenn Rails installiert wird und die Programme 'rails' und 'rake'
ohne das Suffix '19' wiederum vorhandene Dateien überschreibt.
====
----
$ ./configure --prefix=/opt/Ruby/ruby-1.9.2-p0 | tee ../log.ruby_configure
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking target system type... i686-pc-linux-gnu
checking for gcc... gcc
[...]
checking for nroff... /usr/bin/nroff
.ext/include/i686-linux/ruby/config.h updated
ruby library version = 1.9.1
configure: creating ./config.status
config.status: creating Makefile

$ make all | tee ../log.ruby_make_all
gcc -O3 -ggdb -Wextra -Wno-unused-parameter -Wno-parentheses -Wpointer-arith -Ww
rite-strings -Wno-missing-field-initializers -Wno-long-long -I. -I.ext/include/i
686-linux -I./include -I. -DRUBY_EXPORT   -o main.o -c main.c
[...]
 99% [511/515]   ext/socket/lib/socket.rb
 99% [512/515]   ext/stringio/stringio.c
No definition for rb_io_addstr
No definition for rb_io_print
No definition for rb_io_printf
No definition for rb_io_puts
 99% [513/515]   ext/strscan/strscan.c
 99% [514/515]   ext/zlib/zlib.c
100% [515/515]   doc/re.rdoc

Generating RI...


Files:       515
Classes:    1086 (  653 undocumented)
Constants:  1364 ( 1141 undocumented)
Modules:     251 (  148 undocumented)
Methods:    7645 ( 2873 undocumented)
 53.46% documented

Elapsed: 96.0s
 
$ make test | tee ../log.ruby_make_test
sample/test.rb:assignment ...............................................
[...]
PASS all 933 tests
./miniruby -I./lib -I.ext/common -I./- -r./ext/purelib.rb  ./tool/runruby.rb --extout=.ext  -- "./bootstraptest/runner.rb" --ruby="ruby"  ./KNOWNBUGS.rb
2010-08-19 20:16:27 +0200
Driver is ruby 1.9.2p0 (2010-08-18 revision 29036) [i686-linux]
Target is ruby 1.9.2p0 (2010-08-18 revision 29036) [i686-linux]

KNOWNBUGS.rb .
PASS all 1 tests
----

*Step 3:* Installation (als Benutzer 'root') + 
(Dokumentation wird mitinstalliert: install-doc entfällt)
----
$ sudo make install | tee ../log.ruby_make_install
./miniruby -I./lib -I.ext/common -I./- -r./ext/purelib.rb  ./tool/generic_erb.rb -c -o encdb.h ./template/encdb.h.tmpl ./enc enc
encdb.h unchanged
[...]
installing extension scripts: /opt/Ruby/ruby-1.9.2-p0/lib/ruby/1.9.1
installing extension scripts: /opt/Ruby/ruby-1.9.2-p0/lib/ruby/site_ruby/1.9.1
installing extension scripts: /opt/Ruby/ruby-1.9.2-p0/lib/ruby/vendor_ruby/1.9.1
installing extension headers: /opt/Ruby/ruby-1.9.2-p0/include/ruby-1.9.1/ruby
installing rdoc:              /opt/Ruby/ruby-1.9.2-p0/share/ri/1.9.1/system
installing capi-docs:         /opt/Ruby/ruby-1.9.2-p0/share/doc/ruby
installing command scripts:   /opt/Ruby/ruby-1.9.2-p0/bin
installing library scripts:   /opt/Ruby/ruby-1.9.2-p0/lib/ruby/1.9.1
installing common headers:    /opt/Ruby/ruby-1.9.2-p0/include/ruby-1.9.1
installing manpages:          /opt/Ruby/ruby-1.9.2-p0/share/man/man1
installing default gems:      /opt/Ruby/ruby-1.9.2-p0/lib/ruby/gems/1.9.1 (cache, doc, gems, specifications)
                              rake 0.8.7
                              rdoc 2.5.8
                              minitest 1.6.0
----

*Step 4:* Installation verifizieren
----
$ cd /opt/Ruby/ruby-1.9.2-p0
$ ls -l
drwxr-xr-x 2 root root 4096 2010-08-30 21:25 bin
drwxr-xr-x 3 root root 4096 2010-08-30 21:25 include
drwxr-xr-x 3 root root 4096 2010-08-30 21:25 lib
drwxr-xr-x 5 root root 4096 2010-08-30 21:25 share
----

----
$ ls -l bin
-rwxr-xr-x 1 root root    4412 2010-08-30 21:25 erb
-rwxr-xr-x 1 root root     561 2010-08-30 21:25 gem
-rwxr-xr-x 1 root root     333 2010-08-30 21:25 irb
-rwxr-xr-x 1 root root    1263 2010-08-30 21:25 rake
-rwxr-xr-x 1 root root     712 2010-08-30 21:25 rdoc
-rwxr-xr-x 1 root root      88 2010-08-30 21:25 ri
-rwxr-xr-x 1 root root 5146120 2010-08-19 20:13 ruby
-rwxr-xr-x 1 root root     262 2010-08-30 21:25 testrb
----

*Step 5:* Der Pfad zum Verzeichnis '/opt/Ruby/ruby-1.9.2-p0/bin' muß gesetzt werden 

.Lokal in der aktuellen Shell (1) 
----
$ vim /opt/Ruby/ruby19.path.sh
PATH=/opt/Ruby/ruby-1.9.2-p0/bin:$PATH
export PATH
$ . ruby19.path.sh
----

.Systemweit in der Datei '/etc/environment' 
----
$ sudo vim /etc/environment
PATH="/opt/Ruby/ruby-1.9.2-p0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
----

.Systemweit in einer allgemeineren Lösung 
Ein Vorteil ist hierbei, daß für das Einspielen einer neuen Version die 'PATH'-Variable nicht erneut 
angepasst werden müssen.  
----
$ sudo vim /etc/environment
PATH="/opt/Ruby/current/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

$ cd /opt/Ruby/
$ sudo ln -s ruby-1.9.2-p0 current
$ ls -l
lrwxrwxrwx 1 root root   13 2010-08-30 21:28 current -> ruby-1.9.2-p0
drwxr-xr-x 6 root root 4096 2010-08-30 21:25 ruby-1.9.2-p0
----

.Lokal in der aktuellen Shell (2) 
----
$ vim /opt/Ruby/ruby19.path.sh
PATH=/opt/Ruby/current/bin:$PATH
export PATH
$ . ruby19.path.sh
----

*Step 6:* Check

.Die Ruby-Version ...
----
$ which ruby
/opt/Ruby/current/bin/ruby  (1)

$ sudo which ruby    (2)
/opt/Ruby/current/bin/ruby

$ ruby -v            (3) 
ruby 1.9.2p0 (2010-08-18 revision 29036) [i686-linux]
----

. Das Kommando 'which' wertet den gesetzten 'PATH' für den Benutzer 'bob' aus +
. Das Kommando 'which' wertet den gesetzten 'PATH' für den Benuzter 'root' aus
. Ausgabe der Version des installierten Ruby


.Vollständigkeit ...
----
$ ruby -ropenssl -rzlib -rreadline -e "puts 'Happy new Ruby'"
Happy new Ruby
----

.Und ein Ruby1.9-Feature ...
----
$ irb
irb(main):001:0> RUBY_VERSION
=> "1.9.2"
irb(main):002:0> Time.now.to_s
=> "2010-08-19 20:23:44 +0200"
irb(main):003:0> Time.now.wednesday?
=> false
irb(main):004:0> Time.now.thursday?
=> true
irb(main):005:0> exit
----


=== Ruby on Rails 3.0.3

[NOTE]
====
Ruby 1.9 enthält bereits RubyGems - eine früher notwendige separate Installation entfällt.
====

*Step 1:* Vorraussetzung für die nächsten Befehle ist ein 
funktionierender 'PATH'-Eintrag für alle Benutzer (einschliesslich 'root') 
auf die Ruby1.9-Installation:
----
$ which gem
/opt/Ruby/current/bin/gem

$ sudo su -
# . /opt/Ruby/ruby19.path.sh
# which gem
/opt/Ruby/current/bin/gem
----

Dann gehen auch die folgenden Befehle
----
$ gem -v
1.3.7

$ gem list --local
*** LOCAL GEMS ***
minitest (1.6.0)
rake (0.8.7)
rdoc (2.5.8)
----

*Step 2:* Das Programm 'gem' aktualisieren
----
# gem update --system
Updating RubyGems
Nothing to update

# gem -v
1.3.7
----

*Step 3:* Installierte RubyGems aktualisieren
----
# gem update
Updating RubyGems
Nothing to update
root@duisburg:/opt/Ruby# gem update
Updating installed gems
Updating minitest
Successfully installed minitest-2.0.0
Updating rdoc
RDoc 2.5 did not save method parameters, so you should upgrade your rdoc-data
gem to a version >= 2.5.3.

To have ri data for core and stdlib you'll need to:

  gem install rdoc-data

then run:

  rdoc-data --install

To have ri data for you gems you'll also need to run:

  gem rdoc --all --overwrite

If you don't want to rebuild the rdoc for `gem server`, add --no-rdoc.
Successfully installed rdoc-2.5.11
Gems updated: minitest, rdoc
Installing ri documentation for minitest-2.0.0...
Installing ri documentation for rdoc-2.5.11...
Installing RDoc documentation for minitest-2.0.0...
Installing RDoc documentation for rdoc-2.5.11...
----

----
# gem list --local
*** LOCAL GEMS ***
minitest (2.0.0, 1.6.0)
rake (0.8.7)
rdoc (2.5.11, 2.5.8)
----

*Step 4:* Wichtig ist hier die Systemweite Installation von 
Rails 3.0.3 mit dem Benutzer 'root'.
---- 
# gem install rails 
Successfully installed activesupport-3.0.3
Successfully installed builder-2.1.2
Successfully installed i18n-0.4.2
Successfully installed activemodel-3.0.3
Successfully installed rack-1.2.1
Successfully installed rack-test-0.5.6
Successfully installed rack-mount-0.6.13
Successfully installed tzinfo-0.3.23
Successfully installed abstract-1.0.0
Successfully installed erubis-2.6.6
Successfully installed actionpack-3.0.3
Successfully installed arel-2.0.3
Successfully installed activerecord-3.0.3
Successfully installed activeresource-3.0.3
Successfully installed mime-types-1.16
Successfully installed polyglot-0.3.1
Successfully installed treetop-1.4.9
Successfully installed mail-2.2.10
Successfully installed actionmailer-3.0.3
Successfully installed thor-0.14.4
Successfully installed railties-3.0.3
Successfully installed bundler-1.0.6
Successfully installed rails-3.0.3
23 gems installed
Installing ri documentation for activesupport-3.0.3...
[...]
Installing ri documentation for rails-3.0.3...
Installing RDoc documentation for activesupport-3.0.3...
[...]
Installing RDoc documentation for rails-3.0.3...
----

[NOTE]
====
Alternativ mit Angabe der zu installierenden Version
----
# gem install rails --version 3.0.3
----
====

----
$ gem list --local 
*** LOCAL GEMS ***
abstract (1.0.0)
actionmailer (3.0.3)
actionpack (3.0.3)
activemodel (3.0.3)
activerecord (3.0.3)
activeresource (3.0.3)
activesupport (3.0.3)
arel (2.0.3)
builder (2.1.2)
bundler (1.0.6)
erubis (2.6.6)
i18n (0.4.2)
mail (2.2.10)
mime-types (1.16)
minitest (2.0.0, 1.6.0)
polyglot (0.3.1)
rack (1.2.1)
rack-mount (0.6.13)
rack-test (0.5.6)
rails (3.0.3)
railties (3.0.3)
rake (0.8.7)
rdoc (2.5.11, 2.5.8)
thor (0.14.4)
treetop (1.4.9)
tzinfo (0.3.23)
----

----
$ ls -l bin
-rwxr-xr-x 1 root root     394 2010-11-20 17:27 bundle
-rwxr-xr-x 1 root root    4412 2010-08-30 21:25 erb
-rwxr-xr-x 1 root root     391 2010-11-20 17:27 erubis
-rwxr-xr-x 1 root root     561 2010-08-30 21:25 gem
-rwxr-xr-x 1 root root     333 2010-08-30 21:25 irb
-rwxr-xr-x 1 root root     385 2010-11-20 17:27 rackup
-rwxr-xr-x 1 root root     387 2010-11-20 17:27 rails
-rwxr-xr-x 1 root root    1263 2010-08-30 21:25 rake
-rwxr-xr-x 1 root root     388 2010-11-20 17:27 rake2thor
-rwxr-xr-x 1 root root     712 2010-08-30 21:25 rdoc
-rwxr-xr-x 1 root root      88 2010-08-30 21:25 ri
-rwxr-xr-x 1 root root 5146120 2010-08-19 20:13 ruby
-rwxr-xr-x 1 root root     262 2010-08-30 21:25 testrb
-rwxr-xr-x 1 root root     383 2010-11-20 17:27 thor
-rwxr-xr-x 1 root root     390 2010-11-20 17:27 tt
----

*Step 4:* Installation der Datenbank-Treiber mit dem Benutzer 'root'.
---- 
# gem install mysql2
Building native extensions.  This could take a while...
Successfully installed mysql2-0.2.6
1 gem installed
Installing ri documentation for mysql2-0.2.6...
Enclosing class/module 'mMysql2' for class Client not known
Enclosing class/module 'mMysql2' for class Result not known
Installing RDoc documentation for mysql2-0.2.6...
Enclosing class/module 'mMysql2' for class Client not known
Enclosing class/module 'mMysql2' for class Result not known

# gem install sqlite3-ruby
Building native extensions.  This could take a while...
Successfully installed sqlite3-ruby-1.3.2
1 gem installed
Installing ri documentation for sqlite3-ruby-1.3.2...
Installing RDoc documentation for sqlite3-ruby-1.3.2...
----


=== Beispielanwendung: Ruby on Rails
----
$ which rails
/opt/Ruby/current/bin/rails

$ rails -v
Rails 3.0.3

$ cd
$ mkdir RailsDir

$ cd RailsDir
$ rails new myapp --database=mysql

$ cd myapp

$ vi config/database.yml
development:
  adapter: mysql2
  encoding: utf8
  reconnect: false
  database: myapp_development  <---
  pool: 5
  username: bob                <---
  password: GEHEIM             <---
  socket: /var/run/mysqld/mysqld.sock

$ mysql -ubob -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 67
Server version: 5.1.41-3ubuntu12.3 (Ubuntu)

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> create database myapp_development;
Query OK, 1 row affected (0.00 sec)

mysql> exit
Bye


$ rails s
=> Booting WEBrick
=> Rails 3.0.3 application starting in development on http://0.0.0.0:3000
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2010-11-20 17:42:55] INFO  WEBrick 1.3.1
[2010-11-20 17:42:55] INFO  ruby 1.9.2 (2010-08-18) [i686-linux]
[2010-11-20 17:42:55] INFO  WEBrick::HTTPServer#start: pid=20022 port=3000
----

----
Browser> http://localhost:3000/
         About your application’s environment         
----

++++
<img src="images/welcome_aboard_ruby19_rails3.gif" border="1px"
 alt="Ruby on Rails: Welcome aboard" 
 title="Ruby on Rails: Welcome aboard" 
++++

Anhang
------

.Script zum Installieren von Ruby 1.9.2-p0 (ohne weitere Erläuterung)
----
#!/bin/bash
#
ME=make_ruby_1.9.2
TARGET=/opt/Ruby/ruby-1.9.2-p0

if [ ! -e $TARGET ] 
then
  echo "Ziel-Verzeichnis '$TARGET' existiert nicht."
  echo "Abbruch."
  exit 1
fi
echo "Ziel-Verzeichnis:"
ls -l $TARGET

echo "Ruby 1.9.2-Installation fortsetzen (j/n)"
read dummy
case $dummy in
  j|J|y|Y) echo "Installation wird fortgesetzt."
           ;;
  *) echo "Installation wird abgebrochen."
     exit 1
     ;;
esac

echo 
echo "Source auspacken ..."
tar xvzf ruby-1.9.2-p0.tar.gz
cd ruby-1.9.2-p0

echo 
echo "Source übersetzen ..."
./configure --prefix=$TARGET --enable-shared| tee ../log.ruby_configure
make | tee ../log.ruby_make 
make test | tee ../log.ruby_make_test

echo
echo "Ruby 1.9.2 installieren"
sudo make install | tee ../log.ruby_make_install

echo
ls -l $TARGET

echo 
echo "$ME: Ende."
----


Changelog
---------

.Version 0.2
* Erste öffentliche Version

.Version 0.4
* Anpassung an Ubuntu 09.10 (Karmic Koala)

.Version 0.6
* Kleine Korrekturen am Text

.Version 0.8
* Hinweis zur Verwendung

.Version 0.8.1
* Aktualisierung der Installation

.Version 0.8.2
* Aktualisierung von Git und Ruby

.Version 1.0.0
* Anpassung an Ubuntu 10.04 (Lucid Lynx) +
  Neue Programmversion

.Version 1.1.1
* Neue Programmversion: Ruby
  
.Version 1.1.2
* Neue Programmversion: Ruby RC2  

.Version 1.2.0
* Neue Programmversion: Ruby RC2 -> Rails 3 RC

.Version 1.3.0
* Neue Programmversion 1.9.2 - Rails 3.0.0

.Version 1.4.0
* Veröffentlichung von Rails 3.0.3 +
  Version NetBeans 1.9.2p0 ist weiterhin aktuell
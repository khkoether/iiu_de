Installation in Ubuntu: Ruby 1.9.1, Ruby on Rails 2.3.5
=======================================================
Karl-Heinz Köther <&#107;&#104;&#107;&#111;&#101;&#116;&#104;&#101;&#114;&#064;&#107;&#097;&#104;&#119;&#101;&#098;&#046;&#100;&#101;>

:icons:
:Author Initials: KHK
:creativecommons-url: http://creativecommons.org/licenses/by-sa/3.0/de/
:ubuntu-url: http://www.ubuntu.com/
:asciidoc-url: http://www.methods.co.nz/asciidoc/
:ruby-url: http://www.ruby-lang.org/
:ruby-download-url: http://www.ruby-lang.org/de/downloads/
:ruby-ftp-p0: ftp://www.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p0.tar.gz
:ruby-ftp-p129: ftp://www.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p129.tar.gz
:ruby-ftp-p243: ftp://www.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p243.tar.gz
:ruby-ftp-p376: ftp://www.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.tar.gz
:rubyonrails-url: http://www.rubyonrails.org
:mysql-ruby-url: http://rubyforge.org/projects/mysql-ruby/
:netbeans-url: http://www.netbeans.org/downloads/index.html

Version 0.8.1, Januar 2010, <<_changelog,[Changelog]>>

Abstract
--------
Dieser Artikel ist eine Schritt-für-Schritt Anleitung zur Installation 
von {ruby-url}[Ruby 1.9.1] aus dem QuellCode.
 
Die Programmiersprache {ruby-url}[Ruby] ist die Grundlage für das 
Framework {rubyonrails-url}[Ruby on Rails].

Der Artikel ist in {asciidoc-url}[ASCII DOC] erstellt worden.

[CAUTION]
====
Zu beachten ist, dass so ein Dokument zum Einen nie abschliessend 
sein kann, und zum Anderen bestimmte Konfigurationen anders, oder 
auf einem anderem Weg durchgeführt werden können. +
Gerne nehme ich Verbesserungsvorschläge entgegen.

Es gilt wie immer: Verwendung der Anleitung auf eigene Gefahr.
====

Vorraussetzungen
----------------
Die Installation wird für {ubuntu-url}[Ubuntu 9.10 (Karmic Koala)] 
beschrieben. Gleichwohl sind die einzelnen Schritte auch für 
andere Distributionen übertragbar.

.Download
* {ruby-ftp-p0}[Ruby 1.9.1 Patchlevel 0] +    
  ruby-1.9.1-p0  (ca. 9 MB) +
  2009-01-30 (Release date)  
* {ruby-ftp-p129}[Ruby 1.9.1 Patchlevel 129] +    
  ruby-1.9.1-p129  (ca. 9 MB) +
  2009-05-12 (Release date)
* {ruby-ftp-p243}[Ruby 1.9.1 Patchlevel 243] +    
  ruby-1.9.1-p243  (ca. 9 MB) +
  2009-07-18 (Release date)  
* {ruby-ftp-p376}[Ruby 1.9.1 Patchlevel 376] +    
  ruby-1.9.1-p376  (ca. 9 MB) +
  2009-07-11 (Release date)
* {mysql-ruby-url}[MySQL-Ruby Adaptor 2.8.1] + 
  mysql-ruby-2.8.1.tar.gz  (ca. 35 KB) +
  2009-02-01 (Release date)  

[NOTE] 
====
Das Kompilieren der Programmiersprache Ruby wird vom Benutzer 'bob' 
durchgeführt. +
Die eigentliche Installation von Ruby und Ruby on Rails wird vom 
Benutzer 'root' für das System durchgeführt.
----
$ ls -l 
-rw-r--r-- 1 bob bob   34662 2010-01-23 14:52 mysql-ruby-2.8.1.tar.gz
-rw-r--r-- 1 bob bob 9025004 2009-01-30 12:34 ruby-1.9.1-p0.tar.gz
-rw-r--r-- 1 bob bob 9034947 2009-05-12 12:34 ruby-1.9.1-p129.tar.gz
-rw-r--r-- 1 bob bob 9043825 2009-12-06 12:34 ruby-1.9.1-p243.tar.gz
-rw-r--r-- 1 bob bob 9073007 2010-01-23 14:53 ruby-1.9.1-p376.tar.gz
----
====

[NOTE] 
====
Vor der eigentlichen Installation müssen die fehlenden 
Programm-Pakete installiert sind.
----
$ sudo apt-get install ...
               Benötigt:   build-essential libc6-dev  g++  make  dpkg-dev  
               Benötigt:   libssl-dev libmysqlclient-dev libsqlite3-dev   
               Benötigt:   libreadline5-dev libncurses5-dev zlib1g-dev
----
====


== Installation


=== Ruby 1.9.1
Zusätzliche Software-Pakete die nicht über das Paketmanagement 
verwaltet wird, sollte im Verzeichnis '/opt' (Optional) 
installiert werden. 

[IMPORTANT]
====
Ohne die Angabe eines Verzeichnisses wird '/usr/local/...' automatisch verwendet.
Eine bereits vorhandene Ruby-Installation wird überschrieben. +  
 +
Beispiel für die Änderung des Installations-Verzeichnisses:
'./configure --prefix=/opt/wo_auch_immer'
====

*Step 1:* Auspacken des Source-Code
----
$ tar xvzf ruby-1.9.1-p376.tar.gz
$ cd ruby-1.9.1-p376
----

*Step 2:* Konfiguration erstellen und kompilieren
----
$ sudo mkdir -p /opt/Ruby/ruby-1.9.1-p376
----

[NOTE]
====
Die Programm-Option 'configure --program-suffix=19' hilft nicht wirklich. Sie ändert 
die Namen der zu installierenden Binaries bsp. für 'ruby' auf 'ruby19'. Damit könnten die 
Dateien auch in das Verzeichnis '/usr/local/bin' installiert werden - scheinbar eine gute
Lösung - bis zu dem Moment wenn Rails installiert wird und die Programme 'rails' und 'rake'
ohne das Suffix '19' wiederum vorhandene Dateien überschreibt.
====
----
$ ./configure --prefix=/opt/Ruby/ruby-1.9.1-p376 | tee ../log.ruby_configure
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking target system type... i686-pc-linux-gnu
checking for gcc... gcc
[...]
configure: creating ./config.status
config.status: creating Makefile

$ make all | tee ../log.ruby_make_all
sed 's/{\$([^(){}]*)[^{}]*}//g' common.mk > uncommon.mk
gcc -O2 -g -Wall -Wno-parentheses  -fPIC  -I. -I.ext/include/i686-linux ...
[...]
make[1]: Verlasse Verzeichnis '.../ruby-1.9.1-p376'
 
$ make test | tee ../log.ruby_make_test
sample/test.rb:assignment ...............................................
[...]
PASS 945 tests
./miniruby -I./lib -I.ext/common -I./- -r./ext/purelib.rb  "./bootstraptest/runner.rb" --ruby="ruby"  ./KNOWNBUGS.rb
2010-01-23 18:09:46 +0100
Driver is ruby 1.9.1 (2009-12-07 patchlevel 376) [i686-linux]

KNOWNBUGS.rb 
PASS 0 tests
Target is ruby 1.9.1p376 (2009-12-07 revision 26041) [i686-linux]
----

*Step 3:* Installation (als Benutzer 'root') + 
(Dokumentation wird mitinstalliert: install-doc entfällt)
----
$ sudo make install | tee ../log.ruby_make_install
./miniruby -I./lib -I.ext/common -I./- -r./ext/purelib.rb  ...
installing binary commands
installing command scripts
installing library scripts
installing headers
installing manpages
installing extension objects
installing extension scripts
Generating RDoc documentation
[...]
Files:   512
Classes: 1352
Modules: 567
Methods: 7486
Elapsed: 57.8ss
./miniruby -I./lib -I.ext/common -I./- -r./ext/purelib.rb  ./instruby.rb --make="make" --dest-dir="" --extout=".ext" --mflags="" --make-flags="" --data-mode=0644 --prog-mode=0755 --installed-list .installed.list --install=rdoc --rdoc-output=".ext/rdoc"
installing rdoc
----

*Step 4:* Installation verifizieren
----
$ cd /opt/Ruby/ruby-1.9.1-p376
$ ls -l
drwxr-xr-x 2 root root 4096 2010-01-23 18:11 bin
drwxr-xr-x 3 root root 4096 2010-01-23 18:11 include
drwxr-xr-x 3 root root 4096 2010-01-23 18:11 lib
drwxr-xr-x 4 root root 4096 2010-01-23 18:12 share
----

----
$ ls -l bin
-rwxr-xr-x 1 root root    4423 2010-01-23 18:11 erb
-rwxr-xr-x 1 root root     803 2010-01-23 18:11 gem
-rwxr-xr-x 1 root root     335 2010-01-23 18:11 irb
-rwxr-xr-x 1 root root    1265 2010-01-23 18:11 rake
-rwxr-xr-x 1 root root     427 2010-01-23 18:11 rdoc
-rwxr-xr-x 1 root root      90 2010-01-23 18:11 ri
-rwxr-xr-x 1 root root 3852466 2010-01-23 18:08 ruby
-rwxr-xr-x 1 root root     264 2010-01-23 18:11 testrb
----

*Step 5:* Der Pfad zum Verzeichnis '/opt/Ruby/ruby-1.9.1-p376/bin' muß gesetzt werden 

.Lokal in der aktuellen Shell (1) 
----
$ vim /opt/Ruby/ruby19.path.sh
PATH=/opt/Ruby/ruby-1.9.1-p376/bin:$PATH
export PATH
$ . ruby19.path.sh
----

.Systemweit in der Datei '/etc/environment' 
----
$ sudo vim /etc/environment
PATH="/opt/Ruby/ruby-1.9.1-p376/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
----

.Systemweit in einer allgemeineren Lösung 
Ein Vorteil ist hierbei, daß für das Einspielen einer neuen Version die 'PATH'-Variable nicht erneut 
angepasst werden müssen.  
----
$ sudo vim /etc/environment
PATH="/opt/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

$ sudo mkdir -p /opt/local/bin

$ cd /opt/Ruby/
$ sudo ln -s ruby-1.9.1-p376 current
$ ls -l
lrwxrwxrwx 1 root root   16 2010-01-23 18:15 current -> ruby-1.9.1-p376/
drwxr-xr-x 6 root root 4096 2010-01-23 18:11 ruby-1.9.1-p376
-rw-r--r-- 1 root root   39 2010-01-23 18:16 ruby19.path.sh

$ cd /opt/local/bin
$ sudo ln -s ../../Ruby/current/bin/erb
$ sudo ln -s ../../Ruby/current/bin/gem
$ sudo ln -s ../../Ruby/current/bin/irb
$ sudo ln -s ../../Ruby/current/bin/rake
$ sudo ln -s ../../Ruby/current/bin/rdoc
$ sudo ln -s ../../Ruby/current/bin/ri
$ sudo ln -s ../../Ruby/current/bin/ruby
$ sudo ln -s ../../Ruby/current/bin/testrb
$ ls -l
lrwxrwxrwx 1 root root 26 2010-01-23 18:25 erb -> ../../Ruby/current/bin/erb
lrwxrwxrwx 1 root root 26 2010-01-23 18:25 gem -> ../../Ruby/current/bin/gem
lrwxrwxrwx 1 root root 26 2010-01-23 18:25 irb -> ../../Ruby/current/bin/irb
lrwxrwxrwx 1 root root 27 2010-01-23 18:25 rake -> ../../Ruby/current/bin/rake
lrwxrwxrwx 1 root root 27 2010-01-23 18:25 rdoc -> ../../Ruby/current/bin/rdoc
lrwxrwxrwx 1 root root 25 2010-01-23 18:25 ri -> ../../Ruby/current/bin/ri
lrwxrwxrwx 1 root root 27 2010-01-23 18:25 ruby -> ../../Ruby/current/bin/ruby
lrwxrwxrwx 1 root root 29 2010-01-23 18:25 testrb -> ../../Ruby/current/bin/testrb
----

.Lokal in der aktuellen Shell (2) 
----
$ vim /opt/Ruby/ruby19.path.sh
PATH=/opt/local/bin:$PATH
export PATH
$ . ruby19.path.sh
----

*Step 6:* Check

.Die Ruby-Version ...
----
$ which ruby
/opt/local/bin/ruby  (1)

$ sudo which ruby    (2)
/opt/local/bin/ruby

$ ruby -v            (3) 
ruby 1.9.1p376 (2009-12-07 revision 26041) [i686-linux]
----

. Das Kommando 'which' wertet den gesetzten 'PATH' für den Benutzer 'bob' aus +
. Das Kommando 'which' wertet den gesetzten 'PATH' für den Benuzter 'root' aus
. Ausgabe der Version des installierten Ruby


.Vollständigkeit ...
----
$ ruby -ropenssl -rzlib -rreadline -e "puts 'Happy new Ruby'"
Happy new Ruby
----

.Und ein Ruby1.9-Feature ...
----
$ irb
irb(main):001:0> RUBY_VERSION
=> "1.9.1"
irb(main):002:0> Time.now.to_s
=> "2009-12-11 18:36:37 +0100"
irb(main):003:0> Time.now.tuesday?
=> false
irb(main):004:0> Time.now.friday?
=> true
irb(main):005:0> exit
----

=== MySQL-Ruby Adaptor
----
$ tar xvzf mysql-ruby-2.8.1.tar.gz
$ cd mysql-ruby-2.8.1
$ sudo ruby extconf.rb | tee ../log.mysql_ruby_extconf
$ make | tee ../log.mysql_ruby_make
$ sudo make install | tee ../log.mysql_ruby_make_install

$ cd /opt/Ruby/ruby-1.9.1-p376/lib/ruby/site_ruby/1.9.1/i686-linux
$ ls -l 
-rwxr-xr-x 1 root root 155423 2010-01-23 18:31 mysql.so
----


=== Ruby on Rails 2.3.5

[NOTE]
====
Ruby 1.9 enthält bereits RubyGems - eine seperate Installation entfällt.
====

*Step 1:* Vorraussetzung für die nächsten Befehle ist ein 
funktionierender 'PATH'-Eintrag für alle Benutzer (einschliesslich 'root') 
auf die Ruby1.9-Installation:
----
$ which gem
/opt/local/bin/gem

$ sudo su -
# . /opt/Ruby/ruby19.path.sh
# which gem
/opt/local/bin/gem
----

Dann gehen auch die folgenden Befehle
----
$ gem -v
1.3.1

$ gem list --local
*** LOCAL GEMS ***
----

*Step 2:* Das Programm 'gem' aktualisieren
----
# gem update --system
Updating RubyGems
Updating rubygems-update
Successfully installed rubygems-update-1.3.5
:0:Warning: Gem::SourceIndex#search support for String patterns is deprecated
Updating RubyGems to 1.3.5
Installing RubyGems 1.3.5
RubyGems 1.3.5 installed

 === 1.3.5 / 2009-07-21
[...]
RubyGems installed the following executables:
	/opt/Ruby/ruby-1.9.1-p376/bin/gem


$ gem -v
1.3.5

$ gem list --local
*** LOCAL GEMS ***
rubygems-update (1.3.5)
----

*Step 3:* Wichtig ist hier die Systemweite Installation von 
Rails 2.3.5 mit dem Benutzer 'root'.
---- 
# gem install rails rake rack sqlite3-ruby
----

----
$ gem list --local
*** LOCAL GEMS ***
actionmailer (2.3.5)
actionpack (2.3.5)
activerecord (2.3.5)
activeresource (2.3.5)
activesupport (2.3.5)
rack (1.0.1)
rails (2.3.5)
rake (0.8.7)
rubygems-update (1.3.5)
sqlite3-ruby (1.2.5)
----

Für die in dem Verzeichnis '/opt/Ruby/current/bin' neu installierten Programme müssen 'links' angelegt werden.  
----
$ cd /opt/local/bin
$ sudo ln -s ../../Ruby/current/bin/rackup
$ sudo ln -s ../../Ruby/current/bin/rails
$ sudo ln -s ../../Ruby/current/bin/update_rubygems

$ ls -l
lrwxrwxrwx 1 root root 26 2010-01-23 18:25 erb -> ../../Ruby/current/bin/erb
lrwxrwxrwx 1 root root 26 2010-01-23 18:25 gem -> ../../Ruby/current/bin/gem
lrwxrwxrwx 1 root root 26 2010-01-23 18:25 irb -> ../../Ruby/current/bin/irb
lrwxrwxrwx 1 root root 29 2010-01-23 19:35 rackup -> ../../Ruby/current/bin/rackup
lrwxrwxrwx 1 root root 28 2010-01-23 19:35 rails -> ../../Ruby/current/bin/rails
lrwxrwxrwx 1 root root 27 2010-01-23 18:25 rake -> ../../Ruby/current/bin/rake
lrwxrwxrwx 1 root root 27 2010-01-23 18:25 rdoc -> ../../Ruby/current/bin/rdoc
lrwxrwxrwx 1 root root 25 2010-01-23 18:25 ri -> ../../Ruby/current/bin/ri
lrwxrwxrwx 1 root root 27 2010-01-23 18:25 ruby -> ../../Ruby/current/bin/ruby
lrwxrwxrwx 1 root root 29 2010-01-23 18:25 testrb -> ../../Ruby/current/bin/testrb
lrwxrwxrwx 1 root root 38 2010-01-23 19:35 update_rubygems -> ../../Ruby/current/bin/update_rubygems
----

=== Beispielanwendung: Ruby on Rails
----
$ which rails
/opt/local/bin/rails

$ rails -v
Rails 2.3.5

$ cd
$ mkdir RailsDir

$ cd RailsDir
$ rails myapp --database=mysql

$ cd myapp

$ vi config/database.yml
development:
  adapter: mysql
  encoding: utf8
  reconnect: false
  database: myapp_development  <---
  pool: 5
  username: bob                <---
  password: GEHEIM             <---
  socket: /var/run/mysqld/mysqld.sock

$ mysql -ubob -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 32
Server version: 5.0.75-0ubuntu10.2 (Ubuntu)

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql> create database myapp_development;
Query OK, 1 row affected (0.00 sec)

mysql> exit
Bye


$ ruby script/server
=> Booting WEBrick
=> Rails 2.3.5 application starting on http://0.0.0.0:3000
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2010-01-23 19:43:11] INFO  WEBrick 1.3.1
[2010-01-23 19:43:11] INFO  ruby 1.9.1 (2009-12-07) [i686-linux]
[2010-01-23 19:43:16] INFO  WEBrick::HTTPServer#start: pid=17592 port=3000
----

----
Browser> http://localhost:3000/
----

Anhang
------

.Script zum Installieren von Ruby v1.9.1 (ohne weitere Erläuterung)
----
#!/bin/bash
#
ME=make_ruby_1.9.1
TARGET=/opt/Ruby/ruby-1.9.1-p376

if [ ! -e $TARGET ] 
then
  echo "Ziel-Verzeichnis '$TARGET' existiert nicht."
  echo "Abbruch."
  exit 1
fi
echo "Ziel-Verzeichnis:"
ls -l $TARGET

echo "Ruby 1.9.1-Installation fortsetzen (j/n)"
read dummy
case $dummy in
  j|J|y|Y) echo "Installation wird fortgesetzt."
           ;;
  *) echo "Installation wird abgebrochen."
     exit 1
     ;;
esac

echo 
echo "Source auspacken ..."
tar xvzf ruby-1.9.1-p376.tar.gz
cd ruby-1.9.1-p376

echo 
echo "Source übersetzen ..."
./configure --prefix=$TARGET --enable-shared| tee ../log.ruby_configure
make | tee ../log.ruby_make 
make test | tee ../log.ruby_make_test

echo
echo "Ruby 1.9.1 installieren"
sudo make install | tee ../log.ruby_make_install

echo
ls -l $TARGET

echo 
echo "$ME: Ende."
----

.Script zum Installieren von MySQL v2.8.1 (ohne weitere Erläuterung)
----
#! /bin/bash
ME=make_mysql_2.8.1
TARGET=/opt/Ruby/ruby-1.9.1-p376

tar xvzf mysql-ruby-2.8.1.tar.gz
cd mysql-ruby-2.8.1
sudo $TARGET/bin/ruby extconf.rb | tee ../log.mysql_ruby_extconf
make | tee ../log.mysql_ruby_make
sudo make install | tee ../log.mysql_ruby_make_install

ls -l /opt/Ruby/ruby-1.9.1-p376/lib/ruby/site_ruby/1.9.1/i686-linux

echo
echo "$ME: Ende."
----

Changelog
---------

.Version 0.2
* Erste öffentliche Version

.Version 0.4
* Anpassung an Ubuntu 09.10 (Karmic Koala)

.Version 0.6
* Kleine Korrekturen am Text

.Version 0.8
* Hinweis zur Verwendung

.Version 0.8.1
* Aktualisierung der Installation
Installation in Ubuntu: Git 1.7.1.1
===================================
Karl-Heinz Köther <&#107;&#104;&#107;&#111;&#101;&#116;&#104;&#101;&#114;&#064;&#107;&#097;&#104;&#119;&#101;&#098;&#046;&#100;&#101;>

:icons:
:Author Initials: KHK
:creativecommons-url: http://creativecommons.org/licenses/by-sa/3.0/de/
:ubuntu-url: http://www.ubuntu.com/
:asciidoc-url: http://www.methods.co.nz/asciidoc/
:git-url: http://git-scm.com/

Version 1.1.1, Juli 2010, <<_changelog,[Changelog]>>

Abstract
--------
Der Artikel ist eine Schritt-für-Schritt Anleitung zur Installation 
des Programms {git-url}[Git] aus dem QuellCode.
 
{git-url}[Git] ist ein freies verteiltes Versionskontrollsystem 
(DVCS - Distributed Version Control System).

Der Artikel ist in {asciidoc-url}[ASCII DOC] erstellt worden.

[CAUTION]
====
Zu beachten ist, dass so ein Dokument zum Einen nie abschliessend 
sein kann, und zum Anderen bestimmte Konfigurationen anders, oder 
auf einem anderem Weg durchgeführt werden können. +
Gerne nehme ich Verbesserungsvorschläge entgegen.

Es gilt wie immer: Verwendung der Anleitung auf eigene Gefahr.
====

Vorraussetzungen
----------------
Die Installation wird für {ubuntu-url}[Ubuntu 10.04 (Lucid Lynx)] 
beschrieben. + 
Gleichwohl sind die einzelnen Schritte auch für 
andere Debian-basierte GNU/Linux Distributionen übertragbar.

.Download
* {git-url}[Git] +    
  git-1.7.1.1.tar.gz  (ca. 2.9 MB) +
  2010-06-29 (Release date)
  
[NOTE] 
====
Das Kompilieren des Versionskontrollsystem wird beispielhaft vom Benutzer 'bob' 
durchgeführt. +
Die eigentliche Installation von Git wird vom  
Benutzer 'root' für das System durchgeführt.
----
$ ls -l 
-rw-r--r-- 1 bob bob 3014619 2010-07-09 12:50 git-1.7.1.1.tar.gz
----
====

[NOTE] 
====
Vor der eigentlichen Installation müssen die fehlenden 
Programm-Pakete installiert sind.
----
$ sudo apt-get install ...
               Benötigt:   build-essential libc6 libcurl3-gnutls libexpat1 libexpat1-dev 
                           zlib1g perl-modules liberror-perl libdigest-sha1-perl 
                           libcurl4-openssl-dev libssl-dev tcl8.4  tcl8.4-dev xmlto
               Empfiehlt:  patch less rsync openssh-client
----
====

== Installation


=== Git 1.7.1.1

[IMPORTANT]
====
Ohne die Angabe eines Verzeichnisses wird '/usr/local/...' automatisch verwendet.
Eine bereits vorhandene Git-Installation wird überschrieben. +  
 +
Beispiel für die Änderung des Installations-Verzeichnisses:
'./configure --prefix=/opt/wo_auch_immer'
====

*Step 1:* Auspacken des Source-Code
----
$ tar xvzf git-1.7.1.1.tar.gz
$ cd git-1.7.1.1
----

*Step 2:* Konfiguration erstellen und kompilieren
----
$ ./configure | tee ../log.git_configure
configure: Setting lib to 'lib' (the default)
configure: Will try -pthread then -lpthread to enable POSIX Threads.
configure: CHECKS for site configuration
configure: CHECKS for programs
checking for cc... cc
[...]
checking for asciidoc... asciidoc
checking for asciidoc version... asciidoc 8.5.3 > 7
[...]
checking Checking for POSIX Threads with '-pthread'... yes
configure: creating ./config.status
config.status: creating config.mak.autogen
----

----
$ make all doc | tee ../log.git_make_all_doc
GIT_VERSION = 1.7.1
    * new build flags or prefix
    CC fast-import.o
[...]
    ASCIIDOC gitworkflows.xml
    XMLTO gitworkflows.7
make[1]: Verlasse Verzeichnis '.../git-1.7.1/Documentation'
----

*Step 3:* Installation (als Benutzer 'root')
----
$ sudo make install | tee ../log.git_make_install
    SUBDIR git-gui
    SUBDIR gitk-git
make[1]: Für das Ziel »all« ist nichts zu tun.
    SUBDIR perl
    SUBDIR templates    
install -d -m 755 '/usr/local/bin'
install -d -m 755 '/usr/local/libexec/git-core'
install   git-fast-import git-hash-object ...
[...]
----

----
$ sudo make install-doc | tee ../log.git_make_install-doc
make -C Documentation install
[...]
----

----
$ sudo make install-html | tee ../log.git_make_install-html
make -C Documentation install
[...]
----

*Step 4:* Installation verifizieren
----
$ cd /usr/local/bin
$ ls -l git*
-rwxr-xr-x 105 root root 3611156 2010-07-09 13:18 git
-rwxr-xr-x   1 root root  117758 2010-07-09 13:18 git-cvsserver
-rwxr-xr-x   1 root root  321995 2010-07-09 13:18 gitk
-rwxr-xr-x   1 root root 3611156 2010-07-09 13:18 git-receive-pack
-rwxr-xr-x   1 root root 1477328 2010-07-09 13:18 git-shell
-rwxr-xr-x   1 root root 3611156 2010-07-09 13:18 git-upload-archive
-rwxr-xr-x   1 root root 1514774 2010-07-09 13:18 git-upload-pack
----

----
$ man git 
GIT(1)                            Git Manual                            GIT(1)

NAME
       git - the stupid content tracker

SYNOPSIS
       git [--version] [--exec-path[=GIT_EXEC_PATH]] [--html-path]
           [-p|--paginate|--no-pager]
           [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE]
           [--help] COMMAND [ARGS]

DESCRIPTION
       Git is a fast, scalable, distributed revision control system with an
       unusually rich command set that provides both high-level operations and
       full access to internals.

       See gittutorial(7) to get started, then see Everyday Git[1] for a
       useful minimum set of commands, and "man git-commandname" for
       documentation of each command. CVS users may also want to read gitcvs-
       migration(7). See the Git User’s Manual[2] for a more in-depth
       introduction.

       The COMMAND is either a name of a Git command (see below) or an alias
       as defined in the configuration file (see git-config(1)).

       Formatted and hyperlinked version of the latest git documentation can
       be viewed at http://www.kernel.org/pub/software/scm/git/docs/.
[...]
DOCUMENTATION
       The documentation for git suite was started by David Greaves
       <david@dgreaves.com[10]>, and later enhanced greatly by the
       contributors on the git-list <git@vger.kernel.org[9]>.

SEE ALSO
       gittutorial(7), gittutorial-2(7), Everyday Git[1], gitcvs-migration(7),
       gitglossary(7), gitcore-tutorial(7), gitcli(7), The Git User’s
       Manual[2], gitworkflows(7)

GIT
       Part of the git(1) suite

NOTES
        1. Everyday Git
           file:///usr/local/share/doc/git-doc/everyday.html

        2. Git User’s Manual
           file:///usr/local/share/doc/git-doc/user-manual.html

        3. git concepts chapter of the user-manual
           file:///usr/local/share/doc/git-doc/user-manual.html#git-concepts

        4. howto
           file:///usr/local/share/doc/git-doc/howto-index.html

        5. GIT API documentation
           file:///usr/local/share/doc/git-doc/technical/api-index.html
[...]
Git 1.7.1.1                       07/09/2010                            GIT(1)
----

----
$ man gitk 
GITK(1)                           Git Manual                           GITK(1)

NAME
       gitk - The git repository browser

SYNOPSIS
       gitk [<option>...] [<revs>] [--] [<path>...]

DESCRIPTION
       Displays changes in a repository or a selected set of commits. This
       includes visualizing the commit graph, showing information related to
       each commit, and the files in the trees of each revision.

       Historically, gitk was the first repository browser. It’s written in
       tcl/tk and started off in a separate repository but was later merged
       into the main git repository.
[...]
Git 1.7.1.1                       07/09/2010                           GITK(1)
----

----
$ find /usr -type d -cmin -5
/usr/local
/usr/local/libexec
/usr/local/libexec/git-core
/usr/local/share
/usr/local/share/perl
/usr/local/share/perl/5.10.1
/usr/local/share/man
/usr/local/share/man/man5
/usr/local/share/man/man3
/usr/local/share/man/man1
/usr/local/share/man/man7
/usr/local/share/git-gui
/usr/local/share/git-gui/lib
/usr/local/share/git-gui/lib/msgs
/usr/local/share/git-core
/usr/local/share/git-core/templates
/usr/local/share/git-core/templates/branches
/usr/local/share/git-core/templates/hooks
/usr/local/share/git-core/templates/info
/usr/local/share/gitk
/usr/local/share/gitk/lib
/usr/local/share/gitk/lib/msgs
/usr/local/share/doc
/usr/local/share/doc/git-doc
/usr/local/share/doc/git-doc/howto
/usr/local/share/doc/git-doc/technical
/usr/local/lib
/usr/local/lib/perl
/usr/local/lib/perl/5.10.1
/usr/local/lib/perl/5.10.1/auto
/usr/local/lib/perl/5.10.1/auto/Git
/usr/local/lib/python2.6/dist-packages
/usr/local/lib/python2.6/dist-packages/git_remote_helpers
/usr/local/lib/python2.6/dist-packages/git_remote_helpers/git
/usr/local/bin
----

*Step 5:* Dokumentation (local)

.git(1) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/index.html

.gittutorial(7) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/gittutorial.html

.gittutorial-2(7) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/gittutorial-2.html

.Everyday GIT With 20 Commands Or So
Browser> file:///usr/local/share/doc/git-doc/everyday.html

.gitglossary(7) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/gitglossary.html

.gitcore-tutorial(7) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/gitcore-tutorial.html

.gitcli(7) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/gitcli.html

.Git User’s Manual (for version 1.5.3 or newer)
Browser> file:///usr/local/share/doc/git-doc/user-manual.html

.gitworkflows(7) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/gitworkflows.html

.git-config(1) Manual Page 
Browser> file:///usr/local/share/doc/git-doc/git-config.html


Changelog
---------

.Version 0.2
* Erste öffentliche Version

.Version 0.4
* Anpassung an Ubuntu 09.10 (Karmic Koala)

.Version 0.6
* Kleine Korrekturen am Text

.Version 0.8
* Hinweis zur Verwendung

.Version 0.8.1
* Aktualisierung der Installation

.Version 0.8.2
* Aktualisierung von Git und Ruby

.Version 1.0.0
* Anpassung an Ubuntu 10.04 (Lucid Lynx) +
  Neue Programmversion

.Version 1.1.1
* Neue Programmversion: Git

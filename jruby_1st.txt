Rails 4: Erste Schritte &hellip; mit JRuby 
==========================================
Karl-Heinz Köther <&#107;&#104;&#107;&#111;&#101;&#116;&#104;&#101;&#114;&#064;&#107;&#097;&#104;&#119;&#101;&#098;&#046;&#100;&#101;>

:icons:
:Author Initials: KHK
:creativecommons-url: http://creativecommons.org/licenses/by-sa/3.0/de/
:ubuntu-url: http://www.ubuntu.com/
:jruby-url: link:jruby.html

Version 2.0.0, Oktober 2013, <<_changelog,[Changelog]>>


Abstract
--------
Die folgenden Schritte stellen die Funktionsfähigkeit der Installation 
von _JRuby_ und _Ruby on Rails_ (kurz: _Rails_) sicher. 

Der Artikel ist in {asciidoc-url}[AsciiDoc] erstellt worden.

[CAUTION]
====
Zu beachten ist, dass so ein Dokument zum Einen nie abschliessend 
sein kann, und zum Anderen bestimmte Konfigurationen anders, oder 
auf einem anderem Weg durchgeführt werden können. +
Gerne nehme ich Verbesserungsvorschläge entgegen.

Es gilt wie immer: Verwendung der Anleitung auf eigene Gefahr.
====


Vorraussetzungen
----------------
_JRuby_ und _Ruby on Rails_ sind wie in

* {jruby-url}[Installation in Ubuntu: JRuby 1.7.5, Ruby on Rails 4.0.0]
 
beschrieben durchgeführt worden.

.JRuby 1.7.5
----
$ which jruby
/opt/JRuby/sid/current/bin/jruby

$ jruby -v 
jruby 1.7.5 (1.9.3p392) 2013-10-07 74e9291 on OpenJDK 64-Bit Server VM 1.7.0_25-b30 [linux-amd64]

$ jruby -v --1.8   <1> 
jruby 1.7.5 (ruby-1.8.7p370) 2013-10-07 74e9291 on OpenJDK 64-Bit Server VM 1.7.0_25-b30 [linux-amd64]

$ which rails
/opt/JRuby/sid/current/bin/rails

$ jruby -S rails -v   <2>
Rails 4.0.0

$ rails -v     <3>
Rails 4.0.0
----
<1> Die Installation _JRuby_ enthält zwei (gleichberechtigte) Implementationen der 
    Programmier-Sprache _Ruby_: +
    _Ruby 1.8.7-p370_ +
    _Ruby 1.9.3-p392_ (default)
<2> Der Schalter _-S_ führt dazu, daß für das Script zuerst  
    das Verzeichnis JRUBY_HOME/bin geprüft wird - und
    dann der PATH.
<3> Solange wie die ausführbaren Programme von _JRuby on Rails_ im PATH vorangestellt
    werden, kann auf _jruby -S_ verzichtet werden.       


Erste Schritte &hellip;
-----------------------
Die notwendigen Schritte werden auf der Kommandozeile durchgeführt.

.Vorgehensweise 
- Datenbanksystem wählen 
- Datenbank erstellen
- Projektverzeichnis erstellen 
- Datenbankadapter konfigurieren
- JavaScript-Runtime installieren
- Aufruf der Webanwendung im Browser


Datenbanksystem wählen
----------------------
Für _Ruby on Rails_ sind drei Datenbanksysteme zumindest erste Wahl für
die Entwicklung eines neuen Rails-Projektes:

- _SqLite3_ + 
  Ist in _Ruby on Rails_ die Default-Datenbank.
- _MySQL_ +
  Gut und schnell und überhaupt ... überall verfügbar.
- _PostgreSQL_ +
  Lupenreine OpenSource-Datenbanksystem für professionelle Anforderungen. +
  (Ähnliches Vorgehen wie mit MySQL.)

Für die Datenbanksysteme _SqLite3_ und _MySQL_ sind die notwendigen Datenbankadapter
bereits installiert worden.
 

Datenbank erstellen
-------------------
_SQLite3_ ist eine Programmbibliothek, die ein relationales Datenbanksystem enthält.
Das bedeutet, der normale Aufwand an Administration für ein Datenbanksystem, sowie
für das Anlegen von Benutzern, einer Datenbank und dem Zuweisen von Rechten entfällt. 

_MySQL_ hat für die Administration des Datenbanksystems 
verschiedene Programm-Angebote, unter anderem _phpMyAdmin_ ... aber eben auch
die Kommandozeile.

_PostgreSQL_ hat für die Administration des Datenbanksystems 
verschiedene Programm-Angebote, unter anderem _pgAdmin_ ... aber eben auch
die Kommandozeile.

.Anlegen eines Benutzer: _sid_ (in MySQL)
----
# mysql -uroot -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 41
Server version: 5.5.22-0ubuntu1 (Ubuntu)

Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> GRANT ALL PRIVILEGES ON *.* to 'sid'@'localhost'
    -> IDENTIFIED BY 'GEHEIM';
Query OK, 0 rows affected (0.00 sec)

mysql> exit  
----

.Erstellen einer Datenbank: _jmyapp_development_ (in MySQL)
----
$ mysql -usid -p 
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 44
Server version: 5.5.32-0ubuntu0.12.04.1 (Ubuntu)

Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> CREATE DATABASE jmyapp_development;
Query OK, 1 row affected (0.00 sec)

mysql> exit
Bye
----


Projektverzeichnis erstellen 
----------------------------
----
$ cd
$ mkdir RailsDir

$ cd RailsDir
$ rails new jMyApp --database=mysql   <1>
      create  
      create  README.rdoc
      create  Rakefile
      create  config.ru
      create  .gitignore
      create  Gemfile      <2>
      create  app
      create  app/assets/images/rails.png
 [...]
      create  config/database.yml   <3>
 [...]
      create  vendor/plugins
      create  vendor/plugins/.gitkeep
         run  bundle install    <4>
Fetching gem metadata from https://rubygems.org/...........
Fetching gem metadata from https://rubygems.org/..
Resolving dependencies....
Using rake (10.1.0) 
Using i18n (0.6.5) 
Using minitest (4.7.5) 
Using multi_json (1.8.1) 
Using atomic (1.1.14) 
Using thread_safe (0.1.3) 
Using tzinfo (0.3.38) 
Using activesupport (4.0.0) 
Using builder (3.1.4) 
Using erubis (2.7.0) 
Using rack (1.5.2) 
Using rack-test (0.6.2) 
Using actionpack (4.0.0) 
Using mime-types (1.25) 
Using polyglot (0.3.3) 
Using treetop (1.4.15) 
Using mail (2.5.4) 
Using actionmailer (4.0.0) 
Using activemodel (4.0.0) 
Using activerecord-deprecated_finders (1.0.3) 
Using arel (4.0.0) 
Using activerecord (4.0.0) 
Installing activerecord-jdbc-adapter (1.3.2)        <4>
Using jdbc-mysql (5.1.25) 
Installing activerecord-jdbcmysql-adapter (1.3.2)   <5>
Using bundler (1.3.5) 
Using coffee-script-source (1.6.3) 
Using execjs (2.0.2) 
Using coffee-script (2.2.0) 
Using thor (0.18.1) 
Using railties (4.0.0) 
Using coffee-rails (4.0.0) 
Using hike (1.2.3) 
Using jbuilder (1.5.2) 
Using jquery-rails (3.0.4) 
Using json (1.8.0) 
Using tilt (1.4.1) 
Using sprockets (2.10.0) 
Using sprockets-rails (2.0.0) 
Using rails (4.0.0) 
Using rdoc (3.12.2) 
Using sass (3.2.12) 
Using sass-rails (4.0.0) 
Using sdoc (0.3.20) 
Using therubyrhino_jar (1.7.4) 
Using therubyrhino (2.0.2) 
Using turbolinks (1.3.0) 
Using uglifier (2.2.1) 
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
----
<1> Für das Datenbanksystem _SqLite3_ verkürzt sich der Aufruf: 
    _rails new myapp_
<2> Die zu diesem Zeitpunkt benötigten RubyGems und deren Abhängigkeiten
    untereinander entnehmen Sie der Datei _Gemfile_.
<3> Konfigurationsdatei mit den Einstellungen für den 
    Datenbankzugriff (Datenbankadapter).        
<4> Im Netz gibt es inzwischen _neuere_ Versionen für den Zugriff
    mit _Java_ ...
<5> ...auf die Datenbank _MySQL_.
    
[NOTE]
==== 
Die neue Version von _activerecord-jdbc-adapter_ gibt einen Hinweis darauf,
das auch der JDBC-Treiber für _SQLite3_ aktualisiert werden kann.
----
$ gem search ^activerecord-jdbcsqlite3* --remote

*** REMOTE GEMS ***

activerecord-jdbcsqlite3-adapter (1.3.2, 1.0.3 java)
----

----
$ gem update activerecord-jdbcsqlite3
Updating installed gems
Updating activerecord-jdbcsqlite3-adapter
Fetching: activerecord-jdbcsqlite3-adapter-1.3.2.gem (100%)
Successfully installed activerecord-jdbcsqlite3-adapter-1.3.2
Gems updated: activerecord-jdbcsqlite3-adapter
----

----
$ gem list --local | grep activerecord-jdbc
activerecord-jdbc-adapter (1.3.2, 1.3.1)
activerecord-jdbcmysql-adapter (1.3.2, 1.3.1)
activerecord-jdbcsqlite3-adapter (1.3.2, 1.3.1)
----
====
 

.Gemfile
----
source 'https://rubygems.org'

# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
gem 'rails', '4.0.0'

# Use jdbcmysql as the database for Active Record
gem 'activerecord-jdbcmysql-adapter'

# Use SCSS for stylesheets
gem 'sass-rails', '~> 4.0.0'   <1>

# Use Uglifier as compressor for JavaScript assets
gem 'uglifier', '>= 1.3.0'

# Use CoffeeScript for .js.coffee assets and views
gem 'coffee-rails', '~> 4.0.0'

# See https://github.com/sstephenson/execjs#readme for more supported runtimes
gem 'therubyrhino'   <2>

# Use jquery as the JavaScript library
gem 'jquery-rails'

# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks
gem 'turbolinks'

# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
gem 'jbuilder', '~> 1.2'

group :doc do
  # bundle exec rake doc:rails generates the API under doc/api.
  gem 'sdoc', require: false
end
 [...]
----
<1> Der Spezifizierer '~> 4.0.0' ist identisch mit 
    den Bedingungen '>= 4.0.0' und '< 4.1'.  
<2> RubyGem _therubyrhino_: JavaScript-Interpreter      
 
.Prüfen der Abhängigkeiten im _Gemfile_
----
$ cd jMyApp

$ bundle check  
The Gemfile's dependencies are satisfied
----

[NOTE]
====
_CoffeeScript_ ist seit _Ruby on Rails_ v3.1 Standard.
====


Datenbankadapter konfigurieren
------------------------------
.config/database.yml: sqlite3
----
[...]
development:
  adapter: sqlite3
  database: db/development.sqlite3   <1>
[...]
----
<1> Die Datenbank-Datei wird mit dem ersten Aufruf automatisch angelegt. +
    Keine Angabe für Benutzer und Passwort!

.config/database.yml: mysql 
----
[...]
development:
  adapter: mysql
  database: jmyapp_development   <1>
  username: sid
  password: GEHEIM
  host: localhost
[...]  
----
<1> Der hier vorgeschlagene Datenbank-Name wird von _Ruby on Rails_
    automatisch aus dem Namen der Applikation und dem Zusatz '_development'
    gebildet.


JavaScript-Runtime installieren
-------------------------------
Für die erzeugte _Ruby on Rails_-Anwendung ist eine JavaScript-Runtime erforderlich.

.Möglichkeit 1: Das RubyGem _therubyrhino_

link:http://rubygems.org/gems/therubyrhino[RubyGems.org: therubyrhino] +
Embed the Mozilla Rhino JavaScript interpreter into Ruby. +
(Ist bereits installiert ... siehe oben:) 
  
.Möglichkeit 2: Das Ubuntu-Paket 'nodejs' installieren
----
$ sudo apt-get install nodejs
Abhängigkeitsbaum wird aufgebaut       
Statusinformationen werden eingelesen... Fertig
Die folgenden zusätzlichen Pakete werden installiert:
  libc-ares2 libev4 libv8-3.7.12.22
Die folgenden NEUEN Pakete werden installiert:
  libc-ares2 libev4 libv8-3.7.12.22 nodejs
0 aktualisiert, 4 neu installiert, 0 zu entfernen und 0 nicht aktualisiert.
Es müssen 2.099 kB an Archiven heruntergeladen werden.
Nach dieser Operation werden 6.400 kB Plattenplatz zusätzlich benutzt.
Möchten Sie fortfahren [J/n]? 
[...]
nodejs (0.6.12~dfsg1-1ubuntu1) wird eingerichtet ...
update-alternatives: /usr/bin/node wird verwendet, um /usr/bin/js (js) im Auto-Modus bereitzustellen.
Trigger für libc-bin werden verarbeitet ...
ldconfig deferred processing now taking place
----


Aufruf der Webanwendung im Browser
----------------------------------
WEBrick wird in _Ruby on Rails_ default-mäßig als Testserver für die 
Entwicklungs-Umgebung verwendet.

----
$ rails s 
=> Booting WEBrick
=> Rails 4.0.0 application starting in development on http://0.0.0.0:3000    <1>
=> Call with -d to detach
=> Ctrl-C to shutdown server
[2013-10-12 19:41:13] INFO  WEBrick 1.3.1
[2013-10-12 19:41:13] INFO  ruby 1.9.3 (2013-10-07) [java]                    <2>
[2013-10-12 19:41:13] INFO  WEBrick::HTTPServer#start: pid=4223 port=3000
----
<1> Der Webserver läuft ohne Port-Angabe (_--port_ ...) auf Port 3000.
<2> Ruby Version 1.9.3

----
Browser> http://localhost:3000/   <1>
         About your application’s environment   <2>       
----
<1> Grundsätzlicher Test der Verbindung!
<2> Link zu weiteren Informationen...

----
Browser> http://localhost:3000/rails/info/properties/   <1>
----
<1> Informationen zur ausgeführten Applikation _MyApp_: + 
   (Ruby-Version, RubyGems, Verzeichnis, Umgebung, Datenbank, Datenbank-Schema)

oder 

----
$ rake about  
----

.Ausgabe...
----
About your application's environment
Ruby version              1.9.3 (java)   <1>
RubyGems version          2.1.7
Rack version              1.5
Rails version             4.0.0
JavaScript Runtime        therubyrhino (Rhino)
Active Record version     4.0.0
Action Pack version       4.0.0
Action Mailer version     4.0.0
Active Support version    4.0.0
Middleware   
    ActionDispatch::Static, 
    Rack::Lock, 
    #<ActiveSupport::Cache::Strategy::LocalCache::Middleware:0x2ce2006c>, 
    Rack::Runtime, 
    Rack::MethodOverride, 
    ActionDispatch::RequestId, 
    Rails::Rack::Logger, 
    ActionDispatch::ShowExceptions, 
    ActionDispatch::DebugExceptions, 
    ActionDispatch::RemoteIp, 
    ActionDispatch::Reloader, 
    ActionDispatch::Callbacks, 
    ActiveRecord::Migration::CheckPending, 
    ActiveRecord::ConnectionAdapters::ConnectionManagement, 
    ActiveRecord::QueryCache, 
    ActionDispatch::Cookies, 
    ActionDispatch::Session::CookieStore, 
    ActionDispatch::Flash, 
    ActionDispatch::ParamsParser, 
    Rack::Head, 
    Rack::ConditionalGet, 
    Rack::ETag
Application root	        /home/sid/80/RailsDir/jMyApp
Environment	              development
Database adapter	        mysql
Database schema version	  0
----
<1> Ruby Version 1.9.3 (java)


WEBrick benötigt einen Patch
----------------------------
In der Logdatei erzeugt der WebServer _WEBrick_ Warnungen:
----
[...]
[2013-10-12 19:47:31] WARN  Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true


Started GET "/assets/rails.png" for 127.0.0.1 at 2013-10-12 19:47:31 +0200
Served asset /rails.png - 304 Not Modified (23ms)
[2013-10-12 19:47:31] WARN  Could not determine content-length of response body. Set content-length of the response or set Response#chunked = true
[...]
----

Um die zusätzlichen Ausgaben zu verhindern, muß in der JRuby-Installation
der 204_304_keep_alive.patch eingearbeitet werden.

&rarr; https://bugs.ruby-lang.org/attachments/2300/204_304_keep_alive.patch

.current/lib/ruby/1.9/webrick/httpresponse.rb
[source,ruby]
----
      # Keep-Alive connection.   <1>
      if @header['connection'] == "close"
         @keep_alive = false
      elsif keep_alive?
        #if chunked? || @header['content-length']   <2>
        if chunked? || @header['content-length'] || @status == 304 || @status == 204   <3>
          @header['connection'] = "Keep-Alive"
        end
      else
        @header['connection'] = "close"
      end
----
<1> Zeile 201
<2> Kommentarzeichen setzen
<3> Neue Zeile mit zusätzlichen Bedingungen

Installation in Ubuntu: JRuby 1.7.1, Ruby on Rails 3.2.9 
========================================================
Karl-Heinz Köther <&#107;&#104;&#107;&#111;&#101;&#116;&#104;&#101;&#114;&#064;&#107;&#097;&#104;&#119;&#101;&#098;&#046;&#100;&#101;>

:icons:
:Author Initials: KHK
:creativecommons-url: http://creativecommons.org/licenses/by-sa/3.0/de/
:ubuntu-url: http://www.ubuntu.com/
:asciidoc-url: http://www.methods.co.nz/asciidoc/
:ruby-url: http://www.ruby-lang.org/
:ruby-download-url: http://www.ruby-lang.org/de/downloads/
:ruby-ftp: ftp://www.ruby-lang.org/pub/ruby/1.9/
:rubyonrails-url: http://www.rubyonrails.org
:java-url: http://www.oracle.com/technetwork/java/javase/downloads/index.html
:netbeans-url: http://netbeans.org/
:netbeans-download-url: http://netbeans.org/downloads/
:jruby-url: http://jruby.org/
:jruby-download-url: http://jruby.org/download

:jrubyror-url: link:jrubyror.html

Version 1.6.2, Dezember 2012, <<_changelog,[Changelog]>>


Abstract
--------
Dieser Artikel ist eine Schritt-für-Schritt Anleitung zur Installation 
von {jruby-url}[JRuby 1.7.1] unter GNU/Linux.
 
Die Programmiersprache {ruby-url}[JRuby] ist die Implementation 
von {ruby-url}[Ruby] in Java, die wiederum die Grundlage für das 
WebApplication Framework {rubyonrails-url}[Ruby on Rails] bildet. 

Der Artikel ist in {asciidoc-url}[AsciiDoc] erstellt worden.

[CAUTION]
====
Zu beachten ist, dass so ein Dokument zum Einen nie abschliessend 
sein kann, und zum Anderen bestimmte Konfigurationen anders, oder 
auf einem anderem Weg durchgeführt werden können. +
Gerne nehme ich Verbesserungsvorschläge entgegen.

Es gilt wie immer: Verwendung der Anleitung auf eigene Gefahr.
====


Vorraussetzungen
----------------
Die Installation wird für {ubuntu-url}[Ubuntu 12.04 LTS (Precise Pangolin)] 
beschrieben. Gleichwohl sind die einzelnen Schritte auch für 
andere Distributionen übertragbar.

[TIP]
====
Ubuntu 12.04 LTS (Precise Pangolin) enthält das Paket _jruby_1.5.6-2_all_. 
====


Download
~~~~~~~~
* {jruby-download-url}[JRuby 1.7.1] +    
  jruby-1.7.1  (ca. 16.4M) +
  2012-12-03 (Release date)  

[NOTE] 
====
Die neue _JRuby-Version 1.7_ wurde seit 18 Monaten mit bestimmten Zielen entwickelt:

. JDK-Version 6 ist (mindestens) notwendig 
. Unterstützen der JDK-Version 7
. JRuby wird als im Modus _Ruby 1.9.3_ ausgeführt (neuer Default)
. JRuby unterstützt das neue Java-Feature 'invokedynamic' +
  (auch wenn es für den Moment ausgeschaltet ist - "due to JVM issues" ) +
  http://www.jruby.org/2012/10/22/jruby-1-7-0.html[JRuby 1.7.0 Released]
  
Mein Bauchgefühl sagt:
. JRuby 1.6.x -> JDK 6
. JRuby 1.7.x -> JDK 7

Andere mögliche Kombinationen erhöhen einfach den Beschreibungs-Aufwand
für Support.     
====

[NOTE] 
====
Die Installation des OpenJDK oder des Oracle JDK wurde vom Benutzer 'root' für das System durchgeführt. +
Während die anschließende Installation von JRuby und Ruby on Rails für den Benutzer 'sid' ausgeführt wird. 
----
$ ls -l 
-rw-rw-r-- 1 sid sid 17160215 Dez 27 14:51 jruby-bin-1.7.1.tar.gz
----
====


Installation
------------

JRuby
~~~~~
Vor der Installation von _JRuby_ muß das OpenJDK oder das Oracle JDK
bereits installiert sein. 
 
[IMPORTANT]
====
Zusätzliche Software-Pakete  
sollten im Verzeichnis '/opt' (Optional) installiert werden. 
====

*Step 1:* Installation im Verzeichnis '/opt/JRuby/sid' (mit Benutzer 'sid')
----
$ sudo mkdir -p /opt/JRuby/sid && chown sid.sid /opt/JRuby/sid
----

----
$ cd /opt/JRuby/sid

$ tar xvzf jruby-bin-1.7.1.tar.gz
[...]

$ ln -s jruby-1.7.1/ current
$ ls -l
lrwxrwxrwx 1 sid sid   11 Dez 27 14:53 current -> jruby-1.7.1
drwxrwxr-x 8 sid sid 4096 Okt 17 20:40 jruby-1.6.8
drwxrwxr-x 7 sid sid 4096 Nov 21 22:20 jruby-1.7.0
drwxrwxr-x 7 khk khk 4096 Dez 27 14:53 jruby-1.7.1
----

Das Programm 'tree' ist ein wunderbares Hilfsmittel zur Darstellung von Verzeichnissen.
----
$ tree -d -L 2 current
current   <--- jruby-1.7.0
├── bin
├── docs
│   ├── api
│   ├── jvyaml
│   └── man
├── lib
│   ├── native
│   └── ruby
├── samples
│   ├── ext
│   ├── ffi
│   ├── jnlp
│   └── jrubyc_java
└── tool
    └── nailgun

15 directories
---- 

Die zu diesem Zeitpunkt in JRuby enthaltenen RubyGems.
----
$ tree -d -L 3 current/lib/ruby/gems/
current/lib/ruby/gems/
└── shared
    ├── cache
    ├── doc
    ├── gems
    │   └── rake-0.9.2.2
    └── specifications

6 directories   <1>
----
<1> Schade. Das vertraute 'sources-0.0.1' _...is gone_ ;-)


*Step 2:* JRuby-Pfad setzen (von au&szlig;en)
Erstellen Sie eine Datei _jruby.path.sh_ (siehe <<_anhang,[Anhang]>>). 

[CAUTION]
====
In der Datei können Sie ebenfalls entscheiden auf welche der zu diesem
Zeitpunkt verfügbaren Java-Versionen Sie sich beziehen.

Wenn Sie die für das System installierte _JDK_-Version verwenden ... bedeutet 
das ... kein Eintrag. Haben Sie eine zusätzliche _JDK_-Version installiert
sollten Sie die hierfür notwendigen Umgebungsvariablen ebenfalls in dieser 
Datei setzen.
==== 

[NOTE] 
=========================================================
Achtung: Ausführen der Datei mit dem Punkt-Operator!
----
$ . jruby.path.sh
---- 
=========================================================


*Step 3:* Installation verifizieren
----
$ which jruby
/opt/JRuby/sid/current/bin/jruby

$ java -version
java version "1.7.0_09"
Java(TM) SE Runtime Environment (build 1.7.0_09-b05)
Java HotSpot(TM) 64-Bit Server VM (build 23.5-b02, mixed mode)

$ jruby --version
jruby 1.7.1 (1.9.3p327) 2012-12-03 30a153b on Java HotSpot(TM) 64-Bit Server VM 1.7.0_10-b18 [linux-amd64]

$ JRUBY_OPTS=--1.8 jruby --version
$ jruby -v --1.8
jruby 1.7.1 (ruby-1.8.7p370) 2012-12-03 30a153b on Java HotSpot(TM) 64-Bit Server VM 1.7.0_10-b18 [linux-amd64]
----

. Interactive Ruby: jirb
----
$ jirb
irb(main):001:0> RUBY_VERSION
=> "1.9.3"
irb(main):002:0> RUBY_PATCHLEVEL
=> 327
irb(main):003:0> exit
----

.Ruby Gems
----
$ jruby -S gem -v
1.8.24

$ jruby -S gem list --local
*** LOCAL GEMS ***
rake (0.9.2.2)

$ jgem list --local
*** LOCAL GEMS ***
rake (0.9.2.2)

$ jgem search ^rails --remote
*** REMOTE GEMS ***
rails (3.2.9)
rails-3-settings (0.1.1)
rails-action-args (0.1.1)
rails-admin (0.0.0)
[...]
----

[NOTE]
====
Der Schalter _-S_ führt dazu, daß für das Script zuerst  
das Verzeichnis JRUBY_HOME/bin geprüft wird - und
erst im Anschluß der gesetzte _PATH_. +
+
Mit der Umgebungsvariablen JRUBY kann der ausgeführte Ruby-Modus 
(_1.8_ oder _1.9_) gesteuert werden.

----
$ export JRUBY_OPTS=--1.9
----
 
Mit der JRuby-Version 1.7.x ist der Wert _--1.9_ der Standard!
====

.Ein Test auf Vollständigkeit
----
$ jruby -ropenssl -rzlib -rreadline -e "puts 'Happy new JRuby'"   <1>
Happy new JRuby
----
<1> Die Bibliothek _openssl_ ist in JRuby 1.7 bereits enthalten. +
    Eine vorher notwendige zusätzliche Installation entfällt. 


Ruby on Rails 3.2.9
~~~~~~~~~~~~~~~~~~~
*Step 1:* Das Programm '(j)gem' aktualisieren
----
$ jgem update --system  
Latest version currently installed. Aborting.
----
Das Programm '(j)gem' mu&szlig; von Hand aktualisiert werden.

.(j)gem
----
$ which jgem
/opt/JRuby/sid/current/bin/jgem

$ jgem -v
1.8.24

$ jgem list --local
*** LOCAL GEMS ***
rake (0.9.2.2)
----

----
$ which gem
/opt/JRuby/sid/current/bin/gem

$ gem -v
1.8.24

$ gem list
*** LOCAL GEMS ***
rake (0.9.2.2)
----

[NOTE]
====
.(j)gem  
An sich können beide Programme benutzt werden, wobei sowohl der Aufruf
und auch deren Ergebnisse identisch sind.
Sie sind ausschließlich aus Bequemlichkeit
für eine 'private' Sichtweise alternativ vorhanden. 

Das *gem* betont die Verbundenheit zu Ruby, während *jgem*
wiederum auf die Umsetzung in Java hinweist.

Praktisch sollen die Programme _etwas?_ differieren ... und 
das Angebot *jgem* ist _mehr?_ up-to-date ... 

Persönlich favorisiere ich *jruby -S gem ...* -- aber *jgem ...* ist kürzer
====

----
$ jruby -S gem -v
1.8.24

$ jgem -v
1.8.24
----

*Step 2:* Die bereits installierten RubyGems aktualisieren (update)
----
$ jruby -S gem update
Updating installed gems
Updating rake
Fetching: rake-10.0.3.gem (100%)
Successfully installed rake-10.0.3
Gems updated: rake
----

----
$ jgem list --local

*** LOCAL GEMS ***

rake (10.0.3, 0.9.2.2)   <1>
----
<1> Der gezeigte Versionssprung ist kein Fehler ;-) +
    &rarr; link:https://github.com/jimweirich/rake/blob/next-major-release/doc/release_notes/rake-10.0.0.rdoc[Rake 10.0 Released]


*Step 3:* Die _Ruby-Documentation_ installieren
----
$ jgem install rdoc-data
Fetching: json-1.7.5-java.gem (100%)
Fetching: rdoc-3.12.gem (100%)
Depending on your version of ruby, you may need to install ruby rdoc/ri data:

<= 1.8.6 : unsupported
 = 1.8.7 : gem install rdoc-data; rdoc-data --install
 = 1.9.1 : gem install rdoc-data; rdoc-data --install
>= 1.9.2 : nothing to do! Yay!
Fetching: rdoc-data-3.12.gem (100%)
rdoc-data is only required for C ruby 1.8.7 or 1.9.1.

rdoc-data is required for JRuby.   <1>

To install ri data for RDoc 2.5+ run:

  rdoc-data --install

Successfully installed json-1.7.5-java
Successfully installed rdoc-3.12
Successfully installed rdoc-data-3.12
3 gems installed
----
<1> Notwendig für JRuby!

----
$ rdoc-data --install
----

----
$ ri Array#each
= Array#each

(from ruby core)
 -----------------------------------------------------------------------------
  ary.each {|item| block }   -> ary
  ary.each                   -> an_enumerator

 -----------------------------------------------------------------------------

Calls block once for each element in self, passing that element as a
parameter.

If no block is given, an enumerator is returned instead.

  a = [ "a", "b", "c" ]
  a.each {|x| print x, " -- " }

produces:

  a -- b -- c --
----

----
$ jgem list --local

*** LOCAL GEMS ***

json (1.7.5 java)
rake (10.0.3, 0.9.2.2)
rdoc (3.12)
rdoc-data (3.12)
----

Auf die installierte Dokumentation zugreifen.
----
$ jgem server
Server started at http://[0:0:0:0:0:0:0:0]:8808
----

----
Browser> http://localhost:8808/
         RubyGems Documentation Index   
----

image::images/jruby/rubygems_documentation_index.jpeg[RubyGems Documentation Index]


*Step 4:* Grundinstallation von 'Ruby on Rails'
----
$ jgem install rails --rdoc --ri
Fetching: i18n-0.6.1.gem (100%)
 [...]
Fetching: rails-3.2.9.gem (100%)
Successfully installed i18n-0.6.1
Successfully installed multi_json-1.5.0
Successfully installed activesupport-3.2.9
Successfully installed builder-3.0.4
Successfully installed activemodel-3.2.9
Successfully installed rack-1.4.1
Successfully installed rack-cache-1.2
Successfully installed rack-test-0.6.2
Successfully installed journey-1.0.4
Successfully installed hike-1.2.1
Successfully installed tilt-1.3.3
Successfully installed sprockets-2.2.2
Successfully installed erubis-2.7.0
Successfully installed actionpack-3.2.9
Successfully installed arel-3.0.2
Successfully installed tzinfo-0.3.35
Successfully installed activerecord-3.2.9
Successfully installed activeresource-3.2.9
Successfully installed mime-types-1.19
Successfully installed polyglot-0.3.3
Successfully installed treetop-1.4.12
Successfully installed mail-2.4.4
Successfully installed actionmailer-3.2.9
Successfully installed rack-ssl-1.3.2
Successfully installed thor-0.16.0
Successfully installed railties-3.2.9
Successfully installed bundler-1.2.3
Successfully installed rails-3.2.9
28 gems installed
Installing ri documentation for i18n-0.6.1...
[...]
Installing ri documentation for rails-3.2.9...
Installing RDoc documentation for i18n-0.6.1...
[...]
Installing RDoc documentation for rails-3.2.9...
----

[NOTE]
====
Alternativ kann Rails mit der Angabe einer Version installiert werden.
----
$ jgem install rails --version 3.2.9 --rdoc --ri

$ jgem install rails --version '~> 3.2.0' --rdoc --ri   <1>
----
<1> Twiddle Wakka: '~> 3.2.0' bedeutet, das die höchste Gem-Version von Rails
    im Bereich von >= 3.2.0 und < 3.3 installiert wird. 
====


*Step 6:* Datenbankzugriff (via JDBC)
----
$ jgem install activerecord-jdbc-adapter --rdoc --ri
Successfully installed activerecord-jdbc-adapter-1.2.2.1
1 gem installed
Installing ri documentation for activerecord-jdbc-adapter-1.2.2.1...
Installing RDoc documentation for activerecord-jdbc-adapter-1.2.2.1...
----

----
$ jgem install activerecord-jdbcmysql-adapter activerecord-jdbcsqlite3-adapter --rdoc --ri
Fetching: jdbc-mysql-5.1.22.gem (100%)
Fetching: activerecord-jdbcmysql-adapter-1.2.2.1.gem (100%)
Successfully installed jdbc-mysql-5.1.22
Successfully installed activerecord-jdbcmysql-adapter-1.2.2.1
Fetching: jdbc-sqlite3-3.7.2.gem (100%)
Fetching: activerecord-jdbcsqlite3-adapter-1.2.2.1.gem (100%)
Successfully installed jdbc-sqlite3-3.7.2
Successfully installed activerecord-jdbcsqlite3-adapter-1.2.2.1
4 gems installed
Installing ri documentation for jdbc-mysql-5.1.22...
Installing ri documentation for activerecord-jdbcmysql-adapter-1.2.2.1...
Installing ri documentation for jdbc-sqlite3-3.7.2...
Installing ri documentation for activerecord-jdbcsqlite3-adapter-1.2.2.1...
Installing RDoc documentation for jdbc-mysql-5.1.22...
Installing RDoc documentation for activerecord-jdbcmysql-adapter-1.2.2.1...
Installing RDoc documentation for jdbc-sqlite3-3.7.2...
Installing RDoc documentation for activerecord-jdbcsqlite3-adapter-1.2.2.1...
----

*Step 6:* WebServer I
----
$ jgem install mongrel --rdoc --ri
Fetching: gem_plugin-0.2.3.gem (100%)
Fetching: mongrel-1.1.5-java.gem (100%)
Successfully installed gem_plugin-0.2.3
Successfully installed mongrel-1.1.5-java
2 gems installed
Installing ri documentation for gem_plugin-0.2.3...
Installing ri documentation for mongrel-1.1.5-java...
Installing RDoc documentation for gem_plugin-0.2.3...
Installing RDoc documentation for mongrel-1.1.5-java...
----

*Step 7:* WebServer II
----
$ jgem install glassfish --rdoc --ri
Fetching: glassfish-1.0.3-universal-java.gem (100%)
Successfully installed glassfish-1.0.3-universal-java
1 gem installed
Installing ri documentation for glassfish-1.0.3-universal-java...
Installing RDoc documentation for glassfish-1.0.3-universal-java...
----

*Step 8:* WAR (WAR ist ein Dateiformat und steht für Web Application Archive) 
----
$ jgem install warbler --rdoc --ri
Fetching: jruby-jars-1.7.1.gem (100%)
Fetching: jruby-rack-1.1.12.gem (100%)
Fetching: rubyzip-0.9.9.gem (100%)
Fetching: warbler-1.3.6.gem (100%)
Successfully installed jruby-jars-1.7.1
Successfully installed jruby-rack-1.1.12
Successfully installed rubyzip-0.9.9
Successfully installed warbler-1.3.6
4 gems installed
Installing ri documentation for jruby-jars-1.7.1...
Installing ri documentation for jruby-rack-1.1.12...
Installing ri documentation for rubyzip-0.9.9...
Installing ri documentation for warbler-1.3.6...
Installing RDoc documentation for jruby-jars-1.7.1...
Installing RDoc documentation for jruby-rack-1.1.12...
Installing RDoc documentation for rubyzip-0.9.9...
Installing RDoc documentation for warbler-1.3.6...
----

*Step 9:* Erweiterungen
----
$ jgem install sinatra --rdoc --ri
Fetching: rack-protection-1.3.2.gem (100%)
Fetching: sinatra-1.3.3.gem (100%)
Successfully installed rack-protection-1.3.2
Successfully installed sinatra-1.3.3
2 gems installed
Installing ri documentation for rack-protection-1.3.2...
Installing ri documentation for sinatra-1.3.3...
Installing RDoc documentation for rack-protection-1.3.2...
Installing RDoc documentation for sinatra-1.3.3...
----

*Step 10:* Liste der installierte RubyGems
----
$ jgem list --local

*** LOCAL GEMS ***

actionmailer (3.2.9)
actionpack (3.2.9)
activemodel (3.2.9)
activerecord (3.2.9)
activerecord-jdbc-adapter (1.2.2.1)
activerecord-jdbcmysql-adapter (1.2.2.1)
activerecord-jdbcsqlite3-adapter (1.2.2.1)
activeresource (3.2.9)
activesupport (3.2.9)
arel (3.0.2)
builder (3.0.4)
bundler (1.2.3)
erubis (2.7.0)
gem_plugin (0.2.3)
glassfish (1.0.3 universal-java)
hike (1.2.1)
i18n (0.6.1)
jdbc-mysql (5.1.22)
jdbc-sqlite3 (3.7.2)
journey (1.0.4)
jruby-jars (1.7.1)
jruby-rack (1.1.12)
json (1.7.5 java)
mail (2.4.4)
mime-types (1.19)
mongrel (1.1.5 java)
multi_json (1.5.0)
polyglot (0.3.3)
rack (1.4.1)
rack-cache (1.2)
rack-protection (1.3.2)
rack-ssl (1.3.2)
rack-test (0.6.2)
rails (3.2.9)
railties (3.2.9)
rake (10.0.3, 0.9.2.2)
rdoc (3.12)
rdoc-data (3.12)
rubyzip (0.9.9)
sinatra (1.3.3)
sprockets (2.2.2)
thor (0.16.0)
tilt (1.3.3)
treetop (1.4.12)
tzinfo (0.3.35)
warbler (1.3.6)
----


Beipiel
~~~~~~~
{jrubyror-url}[Ruby on Rails: Erste Schritte (mit JRuby)]


Anhang
------
Scripte zum Setzen der Umgebung von *JRuby* (ohne weitere Erläuterung)


.JRuby (mit System-JDK )
----
JRUBY_HOME=/opt/JRuby/sid/current
#JRUBY_OPTS=--1.8   <1>

PATH=$JRUBY_HOME/bin:$PATH

export JRUBY_HOME
#export JRUBY_OPTS
export PATH
----
<1> JRuby wird als im Modus _Ruby 1.8.7_ ausgeführt.


.JRuby (mit separatem JDK)
----
JAVA_BINDIR=/opt/Java/current/bin   <1>
JAVA_HOME=/opt/Java/current
JDK_HOME=/opt/Java/current
JRE_HOME=/opt/Java/current

JRUBY_HOME=/opt/JRuby/sid/current
#JRUBY_OPTS=--1.8   <1>

# Tomcat
#CATALINA_OPTS='-server -Xms512m -Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=512m'

PATH=$JAVA_BINDIR:$JRUBY_HOME/bin:$PATH

export JAVA_BINDIR
export JAVA_HOME
export JDK_HOME
export JRE_HOME

export JRUBY_HOME
#export JRUBY_OPTS

#export CATALINA_OPTS

export PATH
----
<1> Eine von Hand installierte _JDK_-Version 
